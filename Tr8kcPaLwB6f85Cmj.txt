Tr8kcPaLwB6f85Cmj (2020-12-14)

* Meta-data
Challenge name: unknown
Creation time: 2020-11-27
# sub-challenges: 7
Metric catalog: Example metric catalog

* Overall metric statistics
Total model entries: 912
Total executions: 900
Total shares: 12
Total error messages: 335
Total warning messages: 120
Total solutions: 567
Total sessions: 54
Rejected due to server errors: 0
Total instance entries: 0
Total link entries: 13

* Scalar metrics
Number of shared sessions: 9
Alloy runtime errors: 7
Incorrect executions: 248
Correct executions: 319
Shared errored models: 2
Incorrect executions with warnings: 64
Longest session: 71
Shared models: 12
Correct executions with warnings: 6

* Overall metrics

Sessions by length
1: 5
2: 1
3: 2
4: 0
5: 4
6: 0
7: 2
8: 3
9: 2
10: 2
11: 2
12: 3
13: 2
14: 2
15: 3
16: 2
17: 0
18: 2
19: 1
20: 1
21: 3
22: 0
23: 1
24: 1
25: 0
26: 0
27: 1
28: 1
29: 0
30: 0
31: 0
32: 2
33: 1
34: 0
35: 0
36: 0
37: 0
38: 0
39: 0
40: 2
41: 0
42: 0
43: 0
44: 0
45: 0
46: 0
47: 0
48: 0
49: 0
50: 1
51: 0
52: 0
53: 0
54: 0
55: 0
56: 0
57: 0
58: 0
59: 0
60: 0
61: 0
62: 0
63: 1
64: 0
65: 0
66: 0
67: 0
68: 0
69: 0
70: 1

Sessions by # of solved sub-challenges
0: 6
1: 4
2: 6
3: 6
4: 14
5: 2
6: 6
7: 10

Warnings by type
== is redundant, because the left and right expressions always have the same value. Left type = {_} Right type = {_}: 1
^ this/Init .(_) is redundant since its domain and range are disjoint: {_}: 2
Subset operator is redundant, because the right subexpression is always empty. Left type = {_} Right type = {_}: 17
This variable is unused.: 19
Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {_} Right type = {_}: 13
& is irrelevant because the two subexpressions are always disjoint. Left type = {_} Right type = {_}: 1
The join operation here always yields an empty set. Left type = {_} Right type = {_}: 64
^ this/Event .(_) is redundant since its domain and range are disjoint: {_}: 2
== is redundant, because the left and right expressions are always disjoint. Left type = {_} Right type = {_}: 1

Entries over time
2020-11-27: 0
2020-11-28: 0
2020-11-29: 0
2020-11-30: 0
2020-12-01: 0
2020-12-02: 0
2020-12-03: 0
2020-12-04: 0
2020-12-05: 0
2020-12-06: 0
2020-12-07: 0
2020-12-08: 23
2020-12-09: 418
2020-12-10: 12
2020-12-11: 447
2020-12-12: 0
2020-12-13: 0

Errors by type
There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~ : 20
There are 2 possible tokens that can appear here: ,  : : 6
- can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {_} Right type = {_}: 2
There are 5 possible tokens that can appear here: enum fun let open pred : 1
There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~ : 6
There are 3 possible tokens that can appear here: NAME seq this : 1
= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {_} Right type = {_}: 8
The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".: 14
Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.: 7
There are 28 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~ : 4
This must be a formula expression. Instead, it has the following possible type(s): {_}: 22
There are 8 possible tokens that can appear here: NAME disj exh part private seq this var : 14
There are 1 possible tokens that can appear here: ) : 4
!in can be used only between 2 expressions of the same arity. Left type = {_} Right type = {_}: 8
^ can be used only with a binary relation. Instead, its possible type(s) are: {_}: 52
!= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {_} Right type = {_}: 4
in can be used only between 2 expressions of the same arity. Left type = {_} Right type = {_}: 23
This expression failed to be typechecked line _ column _ filename=_.als: 7
The name _ cannot be found.: 50
This cannot be a legal relational join where left hand side is _(_) right hand side is _(_) : 16
& can be used only between 2 expressions of the same arity. Left type = {_} Right type = {_}: 1
This must be an integer expression. Instead, it has the following possible type(s): {_}: 1
This must be a set or relation. Instead, it has the following possible type(s): {_}: 2
There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~ : 25
There are 18 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ fun iden none seq this univ { ~ : 3
There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~ : 8
There are 1 possible tokens that can appear here: } : 4
* can be used only with a binary relation. Instead, its possible type(s) are: {_}: 9
There are 3 possible tokens that can appear here: ,  { | : 13

* Overall metrics, classified

Execution results by sub-challenge
inv1Ok
	SAT: 47
	UNSAT: 75
inv2Ok
	SAT: 8
	UNSAT: 53
inv3Ok
	SAT: 91
	UNSAT: 61
inv4Ok
	SAT: 24
	UNSAT: 52
inv5Ok
	SAT: 32
	UNSAT: 29
inv6Ok
	SAT: 7
	UNSAT: 34
inv7Ok
	SAT: 31
	UNSAT: 15

Executions over time classified
2020-11-27
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-11-28
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-11-29
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-11-30
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-01
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-02
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-03
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-04
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-05
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-06
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-07
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-08
	ERROR: 4
	SAT: 6
	UNSAT: 13
2020-12-09
	ERROR: 180
	SAT: 107
	UNSAT: 131
2020-12-10
	ERROR: 0
	SAT: 8
	UNSAT: 4
2020-12-11
	ERROR: 149
	SAT: 127
	UNSAT: 171
2020-12-12
	ERROR: 0
	SAT: 0
	UNSAT: 0
2020-12-13
	ERROR: 0
	SAT: 0
	UNSAT: 0

Session results by sub-challenge
inv1Ok
	solved: 43
	unsolved: 11
inv2Ok
	solved: 39
	unsolved: 15
inv3Ok
	solved: 38
	unsolved: 16
inv4Ok
	solved: 31
	unsolved: 23
inv5Ok
	solved: 21
	unsolved: 33
inv6Ok
	solved: 21
	unsolved: 33
inv7Ok
	solved: 13
	unsolved: 41

* Metrics by sub-challenge, classified

Size in 10s of nodes

inv1Ok
1
	SAT: 47
	UNSAT: 71
2
	SAT: 0
	UNSAT: 4

inv2Ok
0
	SAT: 4
	UNSAT: 53
1
	SAT: 4
	UNSAT: 0

inv3Ok
1
	SAT: 5
	UNSAT: 0
2
	SAT: 86
	UNSAT: 58
3
	SAT: 0
	UNSAT: 3

inv4Ok
1
	SAT: 3
	UNSAT: 0
2
	SAT: 13
	UNSAT: 45
3
	SAT: 6
	UNSAT: 2
4
	SAT: 2
	UNSAT: 5

inv5Ok
1
	SAT: 1
	UNSAT: 0
2
	SAT: 15
	UNSAT: 0
3
	SAT: 16
	UNSAT: 29

inv6Ok
1
	SAT: 1
	UNSAT: 11
2
	SAT: 6
	UNSAT: 21
3
	SAT: 0
	UNSAT: 2

inv7Ok
2
	SAT: 7
	UNSAT: 0
3
	SAT: 20
	UNSAT: 15
4
	SAT: 3
	UNSAT: 0
5
	SAT: 1
	UNSAT: 0

Number of binary temporal operators

inv1Ok
0
	SAT: 47
	UNSAT: 75

inv2Ok
0
	SAT: 8
	UNSAT: 53

inv3Ok
0
	SAT: 91
	UNSAT: 61

inv4Ok
0
	SAT: 24
	UNSAT: 52

inv5Ok
0
	SAT: 32
	UNSAT: 29

inv6Ok
0
	SAT: 7
	UNSAT: 34

inv7Ok
0
	SAT: 31
	UNSAT: 15

Max nested temporal operator level

inv1Ok
0
	SAT: 47
	UNSAT: 75

inv2Ok
0
	SAT: 8
	UNSAT: 53

inv3Ok
0
	SAT: 91
	UNSAT: 61

inv4Ok
0
	SAT: 24
	UNSAT: 52

inv5Ok
0
	SAT: 32
	UNSAT: 29

inv6Ok
0
	SAT: 7
	UNSAT: 34

inv7Ok
0
	SAT: 31
	UNSAT: 15

Number of lone/one quantifiers

inv1Ok
0
	SAT: 47
	UNSAT: 75

inv2Ok
0
	SAT: 8
	UNSAT: 53

inv3Ok
0
	SAT: 89
	UNSAT: 61
1
	SAT: 2
	UNSAT: 0

inv4Ok
0
	SAT: 24
	UNSAT: 52

inv5Ok
0
	SAT: 32
	UNSAT: 29

inv6Ok
0
	SAT: 6
	UNSAT: 34
1
	SAT: 1
	UNSAT: 0

inv7Ok
0
	SAT: 30
	UNSAT: 15
1
	SAT: 1
	UNSAT: 0

Max nested quantifier level

inv1Ok
0
	SAT: 22
	UNSAT: 1
1
	SAT: 25
	UNSAT: 70
2
	SAT: 0
	UNSAT: 0
3
	SAT: 0
	UNSAT: 4

inv2Ok
0
	SAT: 4
	UNSAT: 53
1
	SAT: 4
	UNSAT: 0

inv3Ok
0
	SAT: 3
	UNSAT: 4
1
	SAT: 59
	UNSAT: 6
2
	SAT: 29
	UNSAT: 50
3
	SAT: 0
	UNSAT: 0
4
	SAT: 0
	UNSAT: 1

inv4Ok
0
	SAT: 6
	UNSAT: 11
1
	SAT: 6
	UNSAT: 4
2
	SAT: 7
	UNSAT: 32
3
	SAT: 3
	UNSAT: 0
4
	SAT: 2
	UNSAT: 5

inv5Ok
0
	SAT: 4
	UNSAT: 0
1
	SAT: 18
	UNSAT: 29
2
	SAT: 10
	UNSAT: 0

inv6Ok
0
	SAT: 1
	UNSAT: 11
1
	SAT: 1
	UNSAT: 6
2
	SAT: 5
	UNSAT: 17

inv7Ok
0
	SAT: 1
	UNSAT: 0
1
	SAT: 9
	UNSAT: 0
2
	SAT: 19
	UNSAT: 15
3
	SAT: 2
	UNSAT: 0

Number of disj quantifications

inv1Ok
0
	SAT: 47
	UNSAT: 75

inv2Ok
0
	SAT: 8
	UNSAT: 53

inv3Ok
0
	SAT: 91
	UNSAT: 61

inv4Ok
0
	SAT: 24
	UNSAT: 52

inv5Ok
0
	SAT: 31
	UNSAT: 29
1
	SAT: 1
	UNSAT: 0

inv6Ok
0
	SAT: 7
	UNSAT: 34

inv7Ok
0
	SAT: 31
	UNSAT: 15

Number multiplicity arrows

inv1Ok
0
	SAT: 47
	UNSAT: 74
1
	SAT: 0
	UNSAT: 1

inv2Ok
0
	SAT: 8
	UNSAT: 53

inv3Ok
0
	SAT: 90
	UNSAT: 51
1
	SAT: 1
	UNSAT: 10

inv4Ok
0
	SAT: 24
	UNSAT: 52

inv5Ok
0
	SAT: 32
	UNSAT: 29

inv6Ok
0
	SAT: 7
	UNSAT: 34

inv7Ok
0
	SAT: 31
	UNSAT: 15

Number of quantifiers

inv1Ok
0
	SAT: 22
	UNSAT: 1
1
	SAT: 25
	UNSAT: 70
2
	SAT: 0
	UNSAT: 0
3
	SAT: 0
	UNSAT: 4

inv2Ok
0
	SAT: 4
	UNSAT: 53
1
	SAT: 4
	UNSAT: 0

inv3Ok
0
	SAT: 3
	UNSAT: 4
1
	SAT: 59
	UNSAT: 6
2
	SAT: 29
	UNSAT: 50
3
	SAT: 0
	UNSAT: 0
4
	SAT: 0
	UNSAT: 1

inv4Ok
0
	SAT: 6
	UNSAT: 11
1
	SAT: 6
	UNSAT: 3
2
	SAT: 7
	UNSAT: 31
3
	SAT: 0
	UNSAT: 2
4
	SAT: 3
	UNSAT: 0
5
	SAT: 2
	UNSAT: 5

inv5Ok
0
	SAT: 4
	UNSAT: 0
1
	SAT: 4
	UNSAT: 0
2
	SAT: 15
	UNSAT: 29
3
	SAT: 9
	UNSAT: 0

inv6Ok
0
	SAT: 1
	UNSAT: 11
1
	SAT: 1
	UNSAT: 6
2
	SAT: 5
	UNSAT: 17

inv7Ok
0
	SAT: 1
	UNSAT: 0
1
	SAT: 9
	UNSAT: 0
2
	SAT: 16
	UNSAT: 15
3
	SAT: 2
	UNSAT: 0
4
	SAT: 0
	UNSAT: 0
5
	SAT: 0
	UNSAT: 0
6
	SAT: 2
	UNSAT: 0
7
	SAT: 1
	UNSAT: 0

Number of inverted navigation expressions

inv1Ok
0
	SAT: 47
	UNSAT: 75

inv2Ok
0
	SAT: 8
	UNSAT: 53

inv3Ok
0
	SAT: 91
	UNSAT: 61

inv4Ok
0
	SAT: 24
	UNSAT: 52

inv5Ok
0
	SAT: 32
	UNSAT: 29

inv6Ok
0
	SAT: 7
	UNSAT: 34

inv7Ok
0
	SAT: 31
	UNSAT: 15

* Derivation tree
Tr8kcPaLwB6f85Cmj, 2020-11-27T15:27:52 (model share)
  beYgDoLHeFw7QpjcY, 2020-12-08T18:04:49 (inv1Ok,incorrect,check,)
    CrS9a4rNsbGcxbDnR, 2020-12-08T18:05 (inv1Ok,correct,check,)
      urv6Qw8hJXhxDjhK3, 2020-12-08T18:05:16 (inv2Ok,correct,check,)
        eGxEaa8JR9eWvsYwX, 2020-12-08T18:06:44 (The name "event" cannot be found.)
          zfmYCczvP37HPLsS7, 2020-12-08T18:06:47 (inv2Ok,correct,check,)
            7mrbSgYGRPcHHmxhL, 2020-12-08T18:07:21 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
              o8b845AF5mRZ4t5fi, 2020-12-08T18:07:40 (inv3Ok,incorrect,check,)
                8wv9S9azwfpRy4ZNG, 2020-12-08T18:07:50 (inv3Ok,incorrect,check,)
                  LjjuLiwuCtZLM56gt, 2020-12-08T18:07:55 (inv3Ok,correct,check,)
                    RiwCBLvyFinMCAMsz, 2020-12-08T18:08:01 (inv3Ok,correct,check,)
  CGxFtj3m3j5xcsLwM, 2020-12-08T19:07:45 (inv2Ok,correct,check,)
    TAxiaK8HCQ5f6aES8, 2020-12-08T19:08:17 (inv3Ok,correct,check,)
      BdqR7DSJP7NSGwL66, 2020-12-08T19:09:26 (inv5Ok,correct,check,)
        eLp89hTM53Jz5EvbH, 2020-12-08T19:09:59 (inv6Ok,correct,check,)
          xeoHuh9XBnzZWjmfZ, 2020-12-08T19:26:17 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
            A7PAmzN76SiZhEvde, 2020-12-08T19:27:18 (inv1Ok,correct,check,)
              NXugKfdtSpDRRNceQ, 2020-12-08T19:31:11 (The name "S2" cannot be found.)
                iZZ4HkbybcmHyXigM, 2020-12-08T19:31:17 (inv4Ok,correct,check,)
                  DBeJejSB8wnnv5fTS, 2020-12-08T19:32:21 (inv7Ok,incorrect,check,)
                    R9HXhMKjg3D2iwXsR, 2020-12-08T19:34:47 (inv7Ok,incorrect,check,)
                      YiJGpdCqWHxbpWL7u, 2020-12-08T19:35:19 (inv7Ok,incorrect,check,)
                        L6TW5DBJERSekWrey, 2020-12-08T19:36:58 (model share)
  tWtn8XCBSxHxEZb4S, 2020-12-08T21:53:47 (inv1Ok,correct,check,)
    4Y6ZpDgiuFQyantTB, 2020-12-08T21:53:50 (inv2Ok,correct,check,)
      T4A4gM75iqMScAc9i, 2020-12-08T21:53:53 (model share)
  jET7QhZAGgWHqbrAh, 2020-12-09T10:30:35 (inv1Ok,correct,check,)
    GS7JkeGBhvu9eCboR, 2020-12-09T10:31:24 (There are 3 possible tokens that can appear here: ,  { |)
      fGf7kAzr7QKFEFwA8, 2020-12-09T10:31:30 (There are 3 possible tokens that can appear here: ,  { |)
        hhFiYnaspxizc33mD, 2020-12-09T10:31:42 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
          o3NpywG9iPEimAFoE, 2020-12-09T10:32:02 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
            xEFdbcfGayNAHXvhm, 2020-12-09T10:32:10 (inv2Ok,correct,check,)
              vFBzrLnmXt4nyHyaM, 2020-12-09T10:33:42 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                YMJx7ts5NxW5AsFte, 2020-12-09T10:33:51 (inv3Ok,incorrect,check,)
                  4QhxmGMrcX68rjt9i, 2020-12-09T10:33:59 (inv3Ok,incorrect,check,)
                    Cvm3Y6LsQF72zRXtD, 2020-12-09T10:34:44 (!= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State->this/Event} Right type = {this/State})
                      9uzyR9wsADzjSH8tM, 2020-12-09T10:34:51 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/State->this/Event})
                        FZRNB2XNczZM8Ssoo, 2020-12-09T10:35:01 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                          cTi5xd9en2bermR83, 2020-12-09T10:35:10 (inv3Ok,incorrect,check,)
                            ix6WTTozrGxrAywQq, 2020-12-09T10:45:30 (inv3Ok,correct,check,)
                              8TucGyuiNzkzx4mA6, 2020-12-09T10:45:44 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
  va9J5kmnq3mbcJuHs, 2020-12-09T10:30:37 (inv1Ok,correct,check,)
    vCzqnMEXd4Q8sNAH9, 2020-12-09T10:30:56 (inv2Ok,incorrect,check,)
      nEptXGwq3JrDtmkxn, 2020-12-09T10:31:05 (inv2Ok,correct,check,)
        xFTYXbzArKi6p43yt, 2020-12-09T10:34:15 (inv3Ok,incorrect,check,)
          d63rHKmqCPRvTR4sJ, 2020-12-09T10:35:58 (inv3Ok,incorrect,check,)
            NgAqgjkNCzXJoiBhd, 2020-12-09T10:36:03 (inv3Ok,incorrect,check,)
              qCsTt9msxTBmZLCgf, 2020-12-09T10:36:33 (This cannot be a legal relational join where left hand side is this/State (type = {this/State}) right hand side is e (type = {this/Event}))
                AR8xqLg5JW4HDhnoT, 2020-12-09T10:43:57 (The name "e" cannot be found.)
                  2BxTbSQtv2ChT9vd8, 2020-12-09T10:44:16 (inv3Ok,incorrect,check,)
                    X2pEnB5q4BXzxswM7, 2020-12-09T10:44:36 (inv3Ok,correct,check,)
                      BtctyWY3LR9Md45Yv, 2020-12-09T10:51:10 (inv4Ok,correct,check,)
                        5Lh8Wt9zkHq8yPKQ9, 2020-12-09T10:53:11 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                          ELHZLXw86cMJoSdYt, 2020-12-09T10:53:21 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                            8H92BKXNXmok2TnYu, 2020-12-09T10:53:31 (There are 3 possible tokens that can appear here: ,  { |)
                              8S988N87YACtm9DRh, 2020-12-09T10:53:36 (inv5Ok,incorrect,check,)
                                FWL5ey8FZG7MWPysn, 2020-12-09T10:54:46 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
  yaqPP2F4tGFQz9v6H, 2020-12-09T10:31:37 (There are 3 possible tokens that can appear here: ,  { |)
    YKDGn9j5rDqQLp3WT, 2020-12-09T10:31:45 (inv1Ok,correct,check,)
      RJ9twwnSfP3LmuTro, 2020-12-09T10:32:09 (inv2Ok,correct,check,)
        aeKNjakmKweTtpw4X, 2020-12-09T10:32:53 (inv3Ok,incorrect,check,)
          hcxYaWoSfj2mTLnom, 2020-12-09T10:33:58 (inv3Ok,incorrect,check,)
            WaCjcW3QsQww7RCct, 2020-12-09T10:35:55 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
              qWuLorewCpyRjT5jT, 2020-12-09T10:36:52 (inv3Ok,incorrect,check,)
                GZ45LLondviDkA7yL, 2020-12-09T10:37:59 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State->this/Event->this/State} Right type = {this/Event->this/State})
                  uuE6hSGBkrx6HoTAW, 2020-12-09T10:38:11 (inv3Ok,incorrect,check,)
                    wtjWnyhBqfRPBgz5p, 2020-12-09T10:38:37 (inv3Ok,incorrect,check,)
                      KEPF2vNZQYS2yr7aC, 2020-12-09T10:40:26 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is s (type = {this/State}))
                        EvzEXn7G59WJcAfnk, 2020-12-09T10:40:55 (inv3Ok,correct,check,)
                          iQCZWDNn9Y7PnCFC9, 2020-12-09T10:44:13 (This must be a formula expression. Instead, it has the following possible type(s): {this/State})
                            estmQdbvoDm7SZ8Gz, 2020-12-09T10:44:19 (inv3Ok,correct,check,)
                              D4h2RPGfF6599tZbr, 2020-12-09T10:44:40 (inv3Ok,correct,check,)
                                rnwZkcfdGy2EaW2Gg, 2020-12-09T10:49:46 (inv4Ok,correct,check,)
                                  EKp7YDHrYmeLthLN4, 2020-12-09T10:54:20 (There are 18 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ fun iden none seq this univ { ~)
                                    R7t4yTBhNq5g8Daiz, 2020-12-09T10:54:45 (inv5Ok,incorrect,check,)
                                      9TpiE4C9twGBwyGn6, 2020-12-09T10:56:16 (inv5Ok,correct,check,)
  Ae9oyPFzNpRw3GEsY, 2020-12-09T10:32:01 (inv1Ok,correct,check,)
    YeHaAPos4iPyhSXtg, 2020-12-09T10:32:27 (inv2Ok,correct,check,)
      fJdvJrXXZCoXP7qCx, 2020-12-09T10:32:56 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/State})
        Td5rHuzwWXZtCiRiy, 2020-12-09T10:34:12 (This cannot be a legal relational join where left hand side is s (type = {this/State}) right hand side is e (type = {this/Event}))
          9rsD5oXNJ6yz3F5sg, 2020-12-09T10:34:21 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
            mrTnekLiQFJmNEwXP, 2020-12-09T10:34:43 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event} Right type = {this/State->this/Event->this/State})
              d4eZxD8PuEsdPJGKa, 2020-12-09T10:35:07 (inv3Ok,correct,check,)
                YCgSNc4ydEj2RbCJc, 2020-12-09T10:35:40 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                  KyeorjJL52sD8hY7W, 2020-12-09T10:36:25 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/Event})
                    dussg5NMkDj4yXDy4, 2020-12-09T10:36:34 (inv4Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event} Right type = {this/State->this/Event->this/State})
                      4RPvHwuwQrr9pAWZ6, 2020-12-09T10:37:20 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/Event})
                        sqeB4kifBxcKHXccu, 2020-12-09T10:37:51 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/State->this/Event->this/State})
                          Z6ySWwALYfcT9N4vX, 2020-12-09T10:38:08 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                            PMd8qzryr6odM2yky, 2020-12-09T10:38:16 (This cannot be a legal relational join where left hand side is this/Event (type = {this/Event}) right hand side is this/Init (type = {this/State}))
                              CzcfX4eZYRBm2oMBK, 2020-12-09T10:38:31 (inv4Ok,incorrect,check,)
                                dnTJsTud9ewp5mwfJ, 2020-12-09T10:40:30 (inv4Ok,incorrect,check,)
                                  Y4dyyqwLL9BEyWSHK, 2020-12-09T10:49:58 (The name "s" cannot be found.)
                                    XNxCXdEvMNjKYYjAS, 2020-12-09T10:50:09 (inv4Ok,correct,check,)
                                      oCBt2N7eDWaMQ6ABi, 2020-12-09T10:50:51 (inv4Ok,correct,check,)
                                        BCqahsCgKjaf244Ri, 2020-12-09T10:53:22 (inv4Ok,correct,check,)
                                          g2mdmFaT86QiXbTHX, 2020-12-09T10:54:24 (inv4Ok,correct,check,)
                                            YHJcW52SHDofh2RTf, 2020-12-09T10:55:53 (inv5Ok,incorrect,check,)
                                              SNKpy8HubBKAj5cBZ, 2020-12-09T10:56:09 (inv5Ok,incorrect,check,)
  THFgzw4iNmtGFF8Nm, 2020-12-09T10:32:01 (The name "States" cannot be found.)
    seMfnhJzm6L7cT8yM, 2020-12-09T10:32:08 (inv1Ok,correct,check,)
      pCkTuyNrj33t9DXtx, 2020-12-09T10:32:28 (inv2Ok,correct,check,)
        LFresxjMiKdRkkEeC, 2020-12-09T10:33:22 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/Event})
          LuJaaKx9EtcQ8fAzx, 2020-12-09T10:35:12 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/Event})
            2cHeWr3SKuKA5CfNp, 2020-12-09T10:35:24 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/Event})
              4R9w3vz4KfvFKMTCa, 2020-12-09T10:39:43 (This must be a set or relation. Instead, it has the following possible type(s): {PrimitiveBoolean})
                nPHZvsmBNCCbwZMCv, 2020-12-09T10:40:09 (There are 3 possible tokens that can appear here: ,  { |)
                  AufXS6o7hd7KLewfP, 2020-12-09T10:43:24 (This must be a formula expression. Instead, it has the following possible type(s): {none})
                    JsRfSbMtv7u5GNKeY, 2020-12-09T10:43:57 (inv3Ok,incorrect,check,)
                      6yNXZzz8offzdWQyP, 2020-12-09T10:44:10 (inv3Ok,incorrect,check,This variable is unused.)
                        r2QztwYtyPA3KCQK5, 2020-12-09T10:44:19 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                          n4u8vrExSMH7inmQW, 2020-12-09T10:44:34 (There are 28 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                            Nnioru8kd7s7C8mBq, 2020-12-09T10:44:58 (inv3Ok,incorrect,check,)
                              xsow4xHBgR7G35F4q, 2020-12-09T10:45:18 (inv3Ok,correct,check,)
                                raqezr6mmyNCETzHn, 2020-12-09T10:45:50 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {PrimitiveBoolean} Right type = {this/Event})
                                  dZMAyegryjc9ExLq7, 2020-12-09T10:45:57 (inv3Ok,correct,check,)
                                    jwcRCFXfgtSJPPBbi, 2020-12-09T10:49:11 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/State})
                                      WXgqQBZz2BpEBHxSe, 2020-12-09T10:51:15 (The name "init" cannot be found.)
                                        AL2kAjAL7WiXHu6Ft, 2020-12-09T10:51:22 (inv4Ok,correct,check,)
  PJArytRgFiyN52DXN, 2020-12-09T10:32:02 (inv1Ok,correct,check,)
    LjJjRw3kaHkbiM2Li, 2020-12-09T10:32:24 (inv2Ok,correct,check,)
      MZevLWtfebm9gEMcw, 2020-12-09T10:45:20 (inv3Ok,correct,check,)
        xrj7tqHM9yv6dSaPK, 2020-12-09T10:52:16 (There are 2 possible tokens that can appear here: ,  :)
          ZFyTjMDCDdhqu58rW, 2020-12-09T10:52:27 (There are 2 possible tokens that can appear here: ,  :)
            xdWs4Wscsmxvn4Txf, 2020-12-09T10:52:52 (in can be used only between 2 expressions of the same arity. Left type = {this/State->this/State} Right type = {this/State})
              GkdNL5NqJj9GeqaKc, 2020-12-09T10:53:14 (inv4Ok,correct,check,)
                duPAi7Z97zu6tbWFx, 2020-12-09T10:56:39 (model share)
  X9KsLc4t7DYyvS7h2, 2020-12-09T10:32:11 (inv4Ok,incorrect,check,)
    Nfj8t9uuJKGTdq6JK, 2020-12-09T10:32:25 (inv1Ok,correct,check,)
      egskLe82qF2GRowaZ, 2020-12-09T10:32:54 (inv3Ok,incorrect,check,)
        nwTbJaP9tZyH6yE6z, 2020-12-09T10:32:56 (inv2Ok,correct,check,)
          tpPE8safiPZ8yx2JB, 2020-12-09T10:32:58 (inv3Ok,incorrect,check,)
            dbJCX7HhuPxiNnDy4, 2020-12-09T10:33:21 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
              QWQNNgphLXwpuuAaS, 2020-12-09T10:33:30 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                EwL4BD78v9GuYCzZo, 2020-12-09T10:35:27 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                  jPgiDCxRSqWwXELbK, 2020-12-09T10:37:47 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                    cecfmZXPvs32C4omJ, 2020-12-09T10:45:02 (inv3Ok,correct,check,)
                      up7NW2GbmHFwTyN2k, 2020-12-09T10:45:08 (inv3Ok,incorrect,check,)
                        CdNhrrzxKCXwKgWjK, 2020-12-09T10:45:14 (The name "ne" cannot be found.)
                          wQbMwBw6zzHkYxEPv, 2020-12-09T10:45:19 (inv3Ok,correct,check,)
                            NFzTwNQuzttu8fNrX, 2020-12-09T10:48:32 (There are 2 possible tokens that can appear here: ,  :)
                              uqrC68kyBoicy2S8D, 2020-12-09T10:50:07 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                Rqp3Ners7HcD2pkmF, 2020-12-09T10:51:05 (There are 2 possible tokens that can appear here: ,  :)
                                  uSJbMdRPqMSRhChXL, 2020-12-09T10:52:11 (There are 2 possible tokens that can appear here: ,  :)
                                    BabnESDFFGaEebQoQ, 2020-12-09T10:52:18 (There are 2 possible tokens that can appear here: ,  :)
                                      8HkDhixh87sNcw9A4, 2020-12-09T10:52:54 (The name "init" cannot be found.)
                                        YFRhokor2GFum4yNm, 2020-12-09T10:53:02 (in can be used only between 2 expressions of the same arity. Left type = {this/State->this/State} Right type = {this/State})
                                          vhcqDWYr9QP9t5oPE, 2020-12-09T10:53:14 (inv4Ok,correct,check,)
  sXBEZfvxQaEiXD2vT, 2020-12-09T10:32:28 (inv1Ok,correct,check,)
  GYXzLbHF8mjHwPdGS, 2020-12-09T10:34:07 (inv3Ok,incorrect,check,)
    Kaf3KkHM6j6Gyg8ED, 2020-12-09T10:34:22 (inv3Ok,incorrect,check,)
  GPPD3etxgK5tqsRbW, 2020-12-09T10:34:46 (inv3Ok,incorrect,check,)
  ErALhXtiND5vcMG5n, 2020-12-09T10:50:08 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/State})
  mPm8zCiARXDGjwHWA, 2020-12-09T11:39:33 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/State->this/Event->this/State})
    5xLX7D3EvvQXeoLCR, 2020-12-09T11:39:54 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
      QWSovWC2K9qyiwTAs, 2020-12-09T11:42:32 (inv1Ok,incorrect,check,)
        3M4uxvptprJr6MNN6, 2020-12-09T11:42:51 (inv1Ok,incorrect,check,This variable is unused.)
          EaoZiRBabyXFdDdJv, 2020-12-09T11:43:01 (inv1Ok,correct,check,)
            c82DTd7xRs2PRFFBt, 2020-12-09T11:43:14 (inv2Ok,correct,check,)
              K7xuneBK6L8TLQn2h, 2020-12-09T11:48:12 (inv2Ok,correct,check,This variable is unused.)
                GLMLxScmvwtBtT6a4, 2020-12-09T11:51:04 (inv3Ok,incorrect,check,This variable is unused.)
                  nixKDSmrL84Yt3bXh, 2020-12-09T11:56:02 (inv3Ok,incorrect,check,This variable is unused.)
                    bchZNRY6Qo48h5BFD, 2020-12-09T11:56:49 (inv2Ok,correct,check,This variable is unused.)
                      xK6Y83x2S6AWmM2bD, 2020-12-09T12:08:19 (inv3Ok,incorrect,check,This variable is unused.)
                        BqAbAWqK3GXoWhmkw, 2020-12-09T12:08:53 (in can be used only between 2 expressions of the same arity. Left type = {Int} Right type = {this/Event->this/State})
                          x5HofZrGdqjnPx9Nr, 2020-12-09T12:09:15 (in can be used only between 2 expressions of the same arity. Left type = {Int} Right type = {this/Event->this/State})
                            eNHYW2NT7fzhJiDNy, 2020-12-09T12:13:08 (There are 28 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                              ZPNbanpBA9jzRxpAa, 2020-12-09T12:13:24 (There are 28 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                aD2yDghrMj3PQtpoD, 2020-12-09T12:13:37 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                  3gXQQxB9KpxbL3Z7h, 2020-12-09T12:14:17 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                    hrGCox59wmsf8K8uY, 2020-12-09T12:15:55 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                      XCZLPgzGrd28dXihn, 2020-12-09T12:16:45 (The name "Events" cannot be found.)
                                        MmsFWgqDjvDj6hj2e, 2020-12-09T12:16:56 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                          rYgGKQau99qX9BQit, 2020-12-09T12:24:53 (inv5Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/Event} Right type = {this/State})
                                            6yCtLE4HoqyJkitze, 2020-12-09T12:26:50 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                              aLSGAD2QtNBvFaoic, 2020-12-09T12:26:55 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                2Aae2Cthf3MYLb83M, 2020-12-09T12:27:30 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                  aE6BMteHAAZ8omTvG, 2020-12-09T12:35:39 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                    Rc4D6AJ5uLpbyfkyZ, 2020-12-09T12:36:46 (in can be used only between 2 expressions of the same arity. Left type = {this/Event} Right type = {this/Event->this/State})
                                                      3QTDH44pczgtq8Tuw, 2020-12-09T12:36:57 (in can be used only between 2 expressions of the same arity. Left type = {this/Event} Right type = {this/Event->this/State})
                                                        zCPGATpyaSfDqWz39, 2020-12-09T12:37:12 (inv3Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/Event} Right type = {this/State})
                                                          fs6T3iCp4idjAZcj3, 2020-12-09T12:37:44 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                            DRxufohnY2dpjHrbc, 2020-12-09T12:37:55 (inv3Ok,incorrect,check,)
                                                              3greFrrT994Dqg8jp, 2020-12-09T12:38:46 (inv3Ok,correct,check,)
                                                                xbFNEy5wEuLS9SeyE, 2020-12-09T12:39:41 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                                                  R9WXoj3SZCK9mGdkQ, 2020-12-09T12:39:50 (inv1Ok,incorrect,check,)
                                                                    ihvxvRY73B6bvKAp6, 2020-12-09T12:40:35 (The name "i" cannot be found.)
                                                                      uTJFdYCxu8FhHSeG2, 2020-12-09T12:40:42 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                        JjYEtZRhzYQvfwujx, 2020-12-09T12:41:23 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
                                                                          rWGdGK6RHyeEZ2bES, 2020-12-09T12:41:53 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                            gv68yookz7Z7zqwCE, 2020-12-09T12:41:59 (inv4Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/State} Right type = {this/Event})
                                                                              Boz7pstKhocTMd2g4, 2020-12-09T12:42:22 (inv4Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/State} Right type = {this/Event})
                                                                                7ZbZSaMcsqhTF7m4A, 2020-12-09T12:43:29 (There are 18 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ fun iden none seq this univ { ~)
                                                                                  svnHMLW88BsCyXrXW, 2020-12-09T12:43:59 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                    vmDyz82KaTQFdLim4, 2020-12-09T12:44:04 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                      YSNq3YxiB3qxdKzez, 2020-12-09T12:44:26 (inv4Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/State} Right type = {this/Event})
                                                                                        LfvkpJpBaAGSE28Tp, 2020-12-09T12:44:40 (There are 18 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ fun iden none seq this univ { ~)
                                                                                          bR7FJsL6FrLmWy2Ng, 2020-12-09T12:44:45 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                          SjjhEFE4wsBfp7mhD, 2020-12-09T12:44:56 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                            i2SchYxfi2R6TMkAJ, 2020-12-09T12:44:59 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                              Z8FobEpN2hMfd8skt, 2020-12-09T12:49 (inv4Ok,correct,check,)
                                                                                                QehXYnuk8vAngFGK2, 2020-12-09T12:51 (in can be used only between 2 expressions of the same arity. Left type = {this/Event} Right type = {this/Event->this/State})
                                                                                                  AFSgfgMaQaZtrvnDw, 2020-12-09T12:51:28 (inv5Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/Event} Right type = {this/State})
                                                                                                  2SNK4K9HihtyBf3vf, 2020-12-09T12:51:43 (inv5Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/Event} Right type = {this/State})
                                                                                                    Mup4CWLZpN4kQ8ZPv, 2020-12-09T12:52:13 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
  w23AjMWDX7chA7zPz, 2020-12-09T11:48:25 (inv1Ok,incorrect,check,)
    8NpzWrttruZgjC6vf, 2020-12-09T11:50:36 (inv1Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
      eYumXGaM84x4AAMqt, 2020-12-09T11:50:41 (inv1Ok,incorrect,check,)
        jnMRiNKKFcwvxP25y, 2020-12-09T11:50:49 (inv1Ok,incorrect,check,)
          KFMWEeKyhpZcqwraS, 2020-12-09T11:51:57 (inv1Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
            iaFSENKmJH3nmrtuy, 2020-12-09T11:52:30 (& can be used only between 2 expressions of the same arity. Left type = {this/Event->this/State} Right type = {this/Event})
              6prxd7vTbpeanFJZn, 2020-12-09T11:52:45 (inv1Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                MTGc3feJxkFJR95dZ, 2020-12-09T11:52:57 (inv1Ok,incorrect,check,)
                  gmcXr2uL2q446t6PQ, 2020-12-09T11:53:54 (inv1Ok,incorrect,check,)
                    S3gp2XMS5TRTudpzr, 2020-12-09T11:53:58 (inv1Ok,incorrect,check,)
                      A7mWcP8H7tHSzW8ZP, 2020-12-09T11:54:17 (inv1Ok,incorrect,check,)
                        ueYhdCq4Dk8jTKKRH, 2020-12-09T11:54:25 (inv1Ok,incorrect,check,)
                          3F2guYcXEfr4XRpdz, 2020-12-09T11:54:55 (inv1Ok,incorrect,check,)
                            ZonCboHDAXaM6haR7, 2020-12-09T11:55:33 (inv1Ok,incorrect,check,)
                              JfW7XdMT2RTxwyaEs, 2020-12-09T11:55:47 (inv1Ok,incorrect,check,)
                                T7zuBHXqpfCQ2wa5s, 2020-12-09T11:56:51 (inv1Ok,incorrect,check,)
                                  m2mt3svHuXqggczPt, 2020-12-09T11:57:04 (inv1Ok,incorrect,check,)
                                    b7e5zBrvdut4T9Anc, 2020-12-09T11:57:13 (inv1Ok,correct,check,)
                                      osv223etfCXsDqhG8, 2020-12-09T11:57:22 (inv1Ok,correct,check,)
                                        u7eimjStpf7GKRHnu, 2020-12-09T12:02:23 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                          sJf8SRC77gkW9q2nf, 2020-12-09T12:02:32 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                            2TS9x9sFXgWs7xeTo, 2020-12-09T12:03:11 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                                              t96sP5sFfyR3zFann, 2020-12-09T12:03:23 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                bALM85hqoAZAB3fCt, 2020-12-09T12:03:34 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                  pjSfndLqaFmkw5P5M, 2020-12-09T12:17:35 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                    9yqHtgJxWFq8zC3hQ, 2020-12-09T12:17:41 (inv1Ok,incorrect,check,)
                                                      5fpg8JpW7YcZjBTBz, 2020-12-09T12:23:12 (inv1Ok,correct,check,)
                                                        bqyMYkgXBuFia2g4c, 2020-12-09T12:23:19 (inv1Ok,incorrect,check,)
                                                          sxF32YFL4CZaMZ8SG, 2020-12-09T12:24:06 (inv1Ok,correct,check,)
                                                            YxECCCzzdTe8NtygB, 2020-12-09T12:26:13 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                              wyRefGamPuz7BYuvD, 2020-12-09T12:26:19 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                                xyZfADrXFMnCSthwc, 2020-12-09T12:26:32 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                                  Ljr4Q9A3wpD4khqeC, 2020-12-09T12:29:05 (inv1Ok,correct,check,)
                                                                    iydmE9CCTkWuLmu8r, 2020-12-09T12:33:35 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                                      Hc5tJn2r24ET9T8ya, 2020-12-09T12:33:40 (inv1Ok,correct,check,)
                                                                        kL7wwfTZK53gjG5eA, 2020-12-09T12:34:47 (The name "lome" cannot be found.)
                                                                          iJRJAZEZxqdHypuAP, 2020-12-09T12:34:54 (inv1Ok,correct,check,)
                                                                            jccksWCAixEfqMPYD, 2020-12-09T12:37:28 (inv1Ok,correct,check,)
                                                                              vqBRbFHkSvBnDdMFS, 2020-12-09T12:38:34 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                                                                                qiNSiSS5sH6qZ9yPZ, 2020-12-09T12:38:47 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                                                                                  j3PwwRQjWorDyGZda, 2020-12-09T12:38:57 (inv1Ok,correct,check,)
                                                                                    3eqXNWt8Z6rTDunAs, 2020-12-09T12:40:09 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                      9FQokpkZJSmsBZwrY, 2020-12-09T12:40:23 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                        mFEnxTdYyPXW2cmnr, 2020-12-09T12:41 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is this/Init (type = {this/State}))
                                                                                          jiqTC8pGnoBP8hwnh, 2020-12-09T12:41:33 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                            mTg8d9AAP7pNo75v4, 2020-12-09T12:42:45 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                              nKHrB8LMva282RYvW, 2020-12-09T12:43:05 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                                pM2dhbDq9SsorBe4s, 2020-12-09T12:43:16 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                                  8yAZJvWdZhmEJtQWk, 2020-12-09T12:43:25 (inv1Ok,correct,check,)
                                                                                                    24y3eNCWTWMLqojPo, 2020-12-09T12:43:38 (inv1Ok,correct,check,^ this/Init . (this/State <: trans) is redundant since its domain and range are disjoint: {this/Event->this/State})
                                                                                                      rf9N4hAZjtTwcNQty, 2020-12-09T12:43:45 (inv1Ok,correct,check,)
                                                                                                        h6JenYoKJ4YCeTEro, 2020-12-09T12:43:50 (inv1Ok,correct,check,^ this/Init . (this/State <: trans) is redundant since its domain and range are disjoint: {this/Event->this/State})
                                                                                                          xtrpegToMPphYWBAQ, 2020-12-09T12:44:19 (inv1Ok,correct,check,)
                                                                                                            6E2owyywvMZKdHJHy, 2020-12-09T12:45:09 (inv1Ok,correct,check,)
                                                                                                              4dRCBgvuohPWGMQXY, 2020-12-09T12:46:13 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                                                MTecwvc82SxBqriHf, 2020-12-09T12:46:27 (There are 25 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all fun iden let lone no none one seq some sum this univ { ~)
                                                                                                                  ApBMdwJckmrcYcmzw, 2020-12-09T12:46:33 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is s (type = {this/State}))
                                                                                                                    cL366LC5nJJof2LyX, 2020-12-09T12:50:20 (inv1Ok,correct,check,This variable is unused.)
                                                                                                                      kML9W2kPkj8YhGGGH, 2020-12-09T12:50:39 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/Event->this/State})
                                                                                                                        zRDYuSD5ZSu5HeuZZ, 2020-12-09T17:57:26 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/Event->this/State})
                                                                                                                          huiie4CNkFcj9TaJo, 2020-12-09T17:57:32 (inv1Ok,correct,check,)
                                                                                                                            b4Sd744wiT7y3vfpB, 2020-12-09T17:59:05 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is this/State (type = {this/State}))
                                                                                                                              hLXuG5Jz6rwdWScf9, 2020-12-09T17:59:47 (inv1Ok,correct,check,)
  b8bNaeG4vgkbeeNfW, 2020-12-09T12:12:56 (inv1Ok,incorrect,check,)
    SyvRfwaZWatxAKTsJ, 2020-12-09T12:14:03 (inv1Ok,correct,check,)
      YY4LzYkJ8RP9xmmrF, 2020-12-09T12:15:04 (The name "ine" cannot be found.)
        hcymb5qRmyZ4SXss2, 2020-12-09T12:17:46 (inv3Ok,correct,check,)
          oCJJCKoXNSJgxZ6YH, 2020-12-09T12:18:06 (inv3Ok,correct,check,)
            r7K2f3M9QE7e89Nfh, 2020-12-09T12:19:27 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
              f6H62bPiFEp65HeYA, 2020-12-09T12:31:05 (inv4Ok,correct,check,)
                6XfQHs8EB9eeD64Se, 2020-12-09T12:31:15 (inv4Ok,correct,check,)
                  MgqJMfys9Wfb7eKRB, 2020-12-09T12:32:03 (model share)
                  GMd78wzCehA3W6M3B, 2020-12-09T12:49:32 (inv5Ok,correct,check,)
                    w7xapwSuPb8WF738e, 2020-12-09T12:51:25 (inv6Ok,correct,check,)
                      BXMdfv827MZSok8a5, 2020-12-09T12:54:02 (inv7Ok,incorrect,check,)
                        ooHJ5DoPAwsfD5ZKR, 2020-12-09T12:54:46 (inv7Ok,incorrect,check,This variable is unused.)
                          wTBoy3yY2bJLcb7XX, 2020-12-09T12:55:13 (inv7Ok,correct,check,)
                            DT3tLyrwSTFezr3q2, 2020-12-09T12:55:48 (model share)
  pacSfgkDNBwQ4SvW9, 2020-12-09T12:13:16 (!= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/State->this/Event->this/State} Right type = {Int})
    3wxSCrn62FCK8vnwk, 2020-12-09T12:13:35 (This must be an integer expression. Instead, it has the following possible type(s): {this/Event->this/State})
      htccu5choxPJkyzHq, 2020-12-09T12:13:58 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
        3F2TYapmW4CbcF2EB, 2020-12-09T12:14:02 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
          Jc3pAbstKYJoMfChF, 2020-12-09T12:14:09 (inv1Ok,correct,check,)
            r8WSfJekxJWc54wuZ, 2020-12-09T12:14:58 (inv2Ok,correct,check,)
              xYjMEdLukd8YbdATi, 2020-12-09T12:15:13 (inv3Ok,incorrect,check,)
                HGCRS7ZwQ7v3fQwgz, 2020-12-09T12:15:22 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event} Right type = {this/State->this/Event->this/State})
                  LpA5bBwL2PbevdFvo, 2020-12-09T12:15:37 (inv3Ok,incorrect,check,)
                    kppRuTNRTbkLYjj2h, 2020-12-09T12:16:19 (inv3Ok,incorrect,check,This variable is unused.)
                      7wqWyHKy7g6XnyWjX, 2020-12-09T12:16:24 (There are 1 possible tokens that can appear here: ))
                        CKWgLZHJrRRDPNetg, 2020-12-09T12:20:18 (inv3Ok,correct,check,)
  92SRnxADzSXZ4gKMK, 2020-12-09T12:14:04 (inv1Ok,correct,check,)
    wJyqqWgxyWcWFZRd4, 2020-12-09T12:17:53 (inv2Ok,correct,check,)
      3YQejZhy9SF2pf7yu, 2020-12-09T12:18:32 (inv3Ok,correct,check,)
        K56Aanxymx7DdGZ3S, 2020-12-09T12:18:34 (inv1Ok,correct,check,)
          FswtgFXYkhzp3Ek6S, 2020-12-09T12:18:36 (inv2Ok,correct,check,)
            ihXvcYDFDYCcoBX2W, 2020-12-09T12:18:37 (inv3Ok,correct,check,)
              hTukbhWD6rd93uBfn, 2020-12-09T12:18:40 (inv4Ok,incorrect,check,)
                6y2HpfKSHj2EyN2eK, 2020-12-09T12:23:47 (There are 1 possible tokens that can appear here: ))
                  4GZtFiukCHD62Sbkf, 2020-12-09T12:24:12 (There are 1 possible tokens that can appear here: ))
                    Sw72WP8C27MSkhHiw, 2020-12-09T12:25:42 (There are 1 possible tokens that can appear here: ))
                      ErzA7YqheP3kh7fTP, 2020-12-09T12:30:52 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                        4zizmoWcCCRs7w5gL, 2020-12-09T12:31:23 (inv4Ok,incorrect,check,)
                          xsjjmoqivqTp9dqdr, 2020-12-09T12:31:36 (This expression failed to be typechecked line 38, column 6, filename=/tmp/alloy_heredoc10357342582554875010.als)
                            uZfExvYaWb2TXscaW, 2020-12-09T12:32 (This expression failed to be typechecked line 38, column 6, filename=/tmp/alloy_heredoc5688607740099549325.als)
                              eCrhEd9vLrFfMjwJM, 2020-12-09T12:43:34 (inv1Ok,correct,check,)
                                DXNkneY7oQMPPu6vB, 2020-12-09T12:43:35 (inv2Ok,correct,check,)
                                  4tNh5Bpxdcsmfcat3, 2020-12-09T12:43:38 (inv3Ok,correct,check,)
                                    4nHbXyTjhqD39zmh6, 2020-12-09T12:43:43 (inv4Ok,incorrect,check,)
                                      cAMskhENLT5CbuKFH, 2020-12-09T12:43:47 (This expression failed to be typechecked line 38, column 6, filename=/tmp/alloy_heredoc17571231277646908919.als)
                                        H5rEj648hqkc8a5c6, 2020-12-09T12:45:10 (inv4Ok,correct,check,)
                                          ebfySWb7Ji9LafaAr, 2020-12-09T12:49:30 (inv5Ok,correct,check,)
                                            4bp2CQvF5f8gmLs5J, 2020-12-09T12:50:47 (inv6Ok,incorrect,check,)
                                              QMEgR2y23zGsFMhym, 2020-12-09T12:51:27 (inv6Ok,correct,check,)
                                                inkHHMPpz6RJJMctE, 2020-12-09T12:55:20 (inv6Ok,correct,check,)
                                                  4WAijap7MHunHBdon, 2020-12-09T12:55:22 (inv7Ok,correct,check,)
                                                    cFhzA8dhFoCXQhSe4, 2020-12-09T12:55:36 (inv1Ok,correct,check,)
                                                      o5MWPWEMGwGio78Se, 2020-12-09T12:55:38 (inv2Ok,correct,check,)
                                                        LpwZBMHyyE7W2d6vq, 2020-12-09T12:55:39 (inv3Ok,correct,check,)
                                                          Qc4yzeG2nKDCumF9N, 2020-12-09T12:55:41 (inv4Ok,correct,check,)
                                                            Tbdwq4k9siFfs3KQg, 2020-12-09T12:55:44 (inv5Ok,correct,check,)
                                                              SepHby9ZT5hQecBzD, 2020-12-09T12:55:46 (inv6Ok,correct,check,)
                                                                DbbtN9zAxxYTfGbHB, 2020-12-09T12:55:48 (inv7Ok,correct,check,)
  Kf7pYefz2vyQEXYZv, 2020-12-09T12:14:06 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
    xJ7EWLpQ9ERk8SSAs, 2020-12-09T12:14:12 (inv1Ok,correct,check,)
      yhsfzFu6kdfBPNZx2, 2020-12-09T12:14:55 (inv2Ok,correct,check,)
        bsjezR8qRkuWJqZNC, 2020-12-09T12:18:38 (inv3Ok,correct,check,)
          W2q7EvesrffRsBgKW, 2020-12-09T12:26:52 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/Event->this/State})
            Di7jyzXSvNyXtpB9r, 2020-12-09T12:27:23 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/State})
              kfjMRRLQfiqzpHj5H, 2020-12-09T12:27:55 (There are 3 possible tokens that can appear here: ,  { |)
                DRwWmFpzeZwk3kxqi, 2020-12-09T12:30:49 (inv4Ok,correct,check,)
  jjC2v7hDkyLXwNSbb, 2020-12-09T12:14:07 (inv1Ok,correct,check,)
    9yKNJ2KCNBoWg4gA9, 2020-12-09T12:18:26 (inv3Ok,correct,check,)
      R22hHyszHTLsP6Bfh, 2020-12-09T12:44:53 (inv4Ok,correct,check,)
        KxkPtaHnGssPJqGzt, 2020-12-09T12:49:26 (inv5Ok,correct,check,)
          5qbm3H9J8zKHddakh, 2020-12-09T12:51:21 (inv6Ok,correct,check,)
            jarQjGpYWeFHNRxNt, 2020-12-09T12:55:14 (inv7Ok,correct,check,)
              xXFyuB83PsjQT45kb, 2020-12-09T12:57:10 (model share)
                pGseSnEojmKgvDYzK, 2020-12-10T13:44:29 (inv2Ok,incorrect,check,)
                  R9EHbBRJcK6oSW2NC, 2020-12-10T13:44:34 (inv2Ok,incorrect,check,)
                    onCzY5K4thLDYFqZ6, 2020-12-10T13:44:41 (inv2Ok,incorrect,check,)
                X2Ej7AqScymi5uHfh, 2020-12-10T13:53:28 (inv1Ok,correct,check,)
                  7x3HLgNwN79CNoFNM, 2020-12-10T13:54:20 (inv2Ok,correct,check,)
                    NpSfKfQZK2B8dRKeD, 2020-12-10T13:54:36 (inv2Ok,correct,check,)
                g8K7qBbCn5WK5PYeT, 2020-12-10T13:56 (inv1Ok,incorrect,check,)
                  dMYE2yNYGyaRehLMW, 2020-12-10T13:56:05 (inv1Ok,incorrect,check,)
                    oMky8iRyM2frNxPjL, 2020-12-10T13:56:19 (inv1Ok,incorrect,check,)
                      rPyeeYbuZDTG7tg6c, 2020-12-10T13:56:35 (inv1Ok,incorrect,check,)
                        dqCS3gqpKwCgKL8rJ, 2020-12-10T13:56:41 (inv1Ok,correct,check,)
                          kwvaG69mpnZzuRcaX, 2020-12-10T13:56:48 (inv1Ok,incorrect,check,)
  2AqTz2NGDoYoXnTfP, 2020-12-09T12:14:07 (inv1Ok,correct,check,)
    f5y4yEr4sH4Jn9WwT, 2020-12-09T12:14:40 (inv2Ok,correct,check,)
      D3teZNbhJbWJLa2Qr, 2020-12-09T12:16:13 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
        LeoRnC88epLNSdfYY, 2020-12-09T12:17:30 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
          X6svSuvvLcJchbGPR, 2020-12-09T12:18:11 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
            BEewnBSvqxo8EsS3N, 2020-12-09T12:18:43 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
              oH8FcELTeXxvkKDSL, 2020-12-09T12:18:50 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                WPy8vqiW3ZiSFWQ52, 2020-12-09T12:19:06 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                  rLscZErcuSmRP577J, 2020-12-09T12:19:30 (inv1Ok,correct,check,)
                    6262g3ufihWnpgR9Q, 2020-12-09T12:19:32 (inv2Ok,correct,check,)
                      LsKMenbc4oMCrRRLN, 2020-12-09T12:22:55 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/State})
                        fLAgSgDgDdiRQ7EBv, 2020-12-09T12:31:50 (model share)
                          dpxWcPzPhy7JWkLJ6, 2020-12-09T12:46:11 (inv4Ok,correct,check,)
                            8Cf8t2WD75qaGt5hm, 2020-12-09T12:46:46 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                              x7eTkbTChdnkYC3Gm, 2020-12-09T12:47:01 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                                ciR7fkrEzwmoxpvku, 2020-12-09T12:47:14 (inv3Ok,correct,check,)
                                  mxQBMirFNFTciG267, 2020-12-09T12:48:54 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event})
                                    AYQsRGzhw4KtzMHus, 2020-12-09T12:49:38 (inv5Ok,correct,check,)
                                      cnipbJ6tyucoQKiAp, 2020-12-09T12:52:18 (inv6Ok,correct,check,)
                                        ju84xtqbMpxdJw5Eg, 2020-12-09T12:53:21 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/State->this/State})
                                          8AxoyLgM4zbWQRS9a, 2020-12-09T12:55:23 (inv7Ok,correct,check,)
  XTC9kQJrpT2zapbgD, 2020-12-09T12:14:33 (inv1Ok,correct,check,)
    tGo2icrS6kbdu9E6d, 2020-12-09T12:15:52 (inv2Ok,correct,check,)
      p3h5jEzLopstWjYaZ, 2020-12-09T12:19:58 (inv3Ok,correct,check,)
  oj9Pyr8S7Te55hXT4, 2020-12-09T12:14:48 (inv2Ok,correct,check,)
  R6tEsiWJ7aNwiWmb8, 2020-12-09T12:26:03 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/State})
    ecE3MHsLDaQBLJxwp, 2020-12-09T12:28:33 (inv1Ok,correct,check,)
      LvFmoNb2hYFcJkHGM, 2020-12-09T12:31:49 (inv2Ok,correct,check,)
        uRSSRYHzCANkb8cWL, 2020-12-09T12:33:32 (inv3Ok,incorrect,check,)
          G3GtGT7tqrFA7qqv2, 2020-12-09T12:33:45 (inv3Ok,incorrect,check,)
            6tmmaFdt2kXgnGw7Q, 2020-12-09T12:38:54 (The name "s" cannot be found.)
              Xa2r7F3kSh6QZz4Fz, 2020-12-09T12:39:07 (The name "s" cannot be found.)
                BczjHjW4bZZShYgJs, 2020-12-09T12:39:27 (There are 3 possible tokens that can appear here: ,  { |)
                  QByskWccFAENe6dQL, 2020-12-09T12:39:39 (The name "s" cannot be found.)
                    RoxPNtBHzJcCZncFE, 2020-12-09T12:43:30 (The name "S" cannot be found.)
                      fc2tdYQB2XuTDNdBX, 2020-12-09T12:43:38 (The name "adj" cannot be found.)
                        D8Mdadd9wAsGck3Y8, 2020-12-09T12:43:46 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                          dGfg2eAFyvaT5d3kT, 2020-12-09T12:44:10 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                            Bm926RStxXSSiSxGq, 2020-12-09T12:44:24 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                              EmhxjSAphaagwp6MR, 2020-12-09T12:46:08 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
  rtY8PNiQhqSXRX7Yh, 2020-12-09T12:28:27 (inv1Ok,correct,check,)
    hDQg2Jaz5rqaFmXaq, 2020-12-09T12:30:13 (inv2Ok,correct,check,)
      Zuj6NrzAFY2zQ7WqG, 2020-12-09T12:35:27 (inv3Ok,incorrect,check,)
        NCDE5QAYHKAFDqbPq, 2020-12-09T12:35:37 (inv3Ok,incorrect,check,)
          v7bpxtAnjyNcsuG8k, 2020-12-09T12:36:08 (inv3Ok,incorrect,check,)
            e9q9Jnhp49vgzMyJx, 2020-12-09T12:36:17 (inv3Ok,incorrect,check,)
              czPhTTxerg3T8ixXC, 2020-12-09T12:39:05 (The name "e" cannot be found.)
                macBL45KSeuagKHLX, 2020-12-09T12:39:13 (inv3Ok,correct,check,)
                  kQzGRAdEYraHSnsrZ, 2020-12-09T12:43:12 (The name "States" cannot be found.)
                    h2h89R2h53fePDbNq, 2020-12-09T12:43:21 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                      QC9c5NfWqabT6gM3a, 2020-12-09T12:52:21 (inv4Ok,correct,check,)
  MaDCeabQMt8XxkioD, 2020-12-09T12:28:27 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
    sLQAv4FnLHqLyy7dZ, 2020-12-09T12:28:57 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
      ciNw2tTZmLAfYB7po, 2020-12-09T12:29:04 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
        ZAJmQoAqmgQW2o8Jh, 2020-12-09T12:29:09 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
          3gfct8Trfh3BaeEcT, 2020-12-09T12:29:54 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
            cciThABCQGn8ZHKgN, 2020-12-09T12:30:13 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
              LnuHRgR76vPxE2KbF, 2020-12-09T12:30:35 (The name "sone" cannot be found.)
                E969ymhZ5d42bC9Sj, 2020-12-09T12:30:41 (inv1,incorrect,run,)
                  6Bta3i7uxi3RMG3eZ, 2020-12-09T12:31:48 (inv2,incorrect,run,)
                    SLAADXriTLSTQ5RMb, 2020-12-09T12:32:41 (inv1Ok,correct,check,)
                      wcKixgsd8KkNK37pr, 2020-12-09T12:32:48 (inv2Ok,correct,check,)
                        CGfAD3GWjKve9cAqA, 2020-12-09T12:32:50 (inv3Ok,incorrect,check,)
                          9gi6KddNQqDY4pTqS, 2020-12-09T12:36:03 (The name "s" cannot be found.)
                            MWnggxZQNJue6YuiR, 2020-12-09T12:37:24 (inv3Ok,incorrect,check,)
                              3TvZLq9WJLrccLuhC, 2020-12-09T12:38:50 (The name "s" cannot be found.)
                                9ZpvbC6sPMfqvQM2x, 2020-12-09T12:38:58 (The name "s" cannot be found.)
                                  qpxH5CpSjQinf4bW8, 2020-12-09T12:39:18 (The name "s" cannot be found.)
                                    8oCZMEAidaa4j3NGi, 2020-12-09T12:39:50 (The name "s" cannot be found.)
                                      eFeGctK9Z6kEEeCTy, 2020-12-09T12:41:17 (The name "s" cannot be found.)
                                        dhT8TLiSWZ4eKj63i, 2020-12-09T12:41:29 (inv3Ok,correct,check,)
                                          oojBQf2y7ExJWjCqG, 2020-12-09T12:42:54 (The name "adj" cannot be found.)
                                            ydX2FuBHPkZnPnzFq, 2020-12-09T12:43:01 (The name "state" cannot be found.)
                                              NNLp6qrFkKdpwhpXx, 2020-12-09T12:43:07 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/State} Right type = {this/Event->this/State})
                                                TXMP3Py7crH4qvrm5, 2020-12-09T12:43:15 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                  TYusBu3ux9mptBAYH, 2020-12-09T12:44:05 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State})
                                                    owiHZmWmGZgZoBDcY, 2020-12-09T12:44:13 (inv4Ok,incorrect,check,)
                                                      9c7FkFtStXAuqJkvd, 2020-12-09T12:47:07 (inv4Ok,correct,check,)
  ssHkXzkmSm9PWNydR, 2020-12-09T12:29:18 (- can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/State})
    Jp79bxii9oT6Ne7Su, 2020-12-09T12:29:29 (inv1Ok,incorrect,check,)
      2pvx85YTAGbnf8sja, 2020-12-09T12:30:02 (- can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/State})
        ZPoujjWoqy2QETnKY, 2020-12-09T12:33:53 (The name "strans" cannot be found.)
          baGJkHLeSRWWmLtGT, 2020-12-09T12:33:59 (inv2Ok,correct,check,)
            oEQY7iXPmmKmxMWRT, 2020-12-09T12:53:04 (model share)
              vvzfxr9aEZdz7KXfa, 2020-12-11T15:12:47 (inv1Ok,correct,check,)
  RuvGd5Y6nG7warACg, 2020-12-09T12:34:06 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
    NhBWNraMq328PHQ8x, 2020-12-09T12:34:16 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
      zpXYvrXCtv8aikEMX, 2020-12-09T12:35:27 (inv1Ok,incorrect,check,)
        uHG8ayrBtbsEWrCTr, 2020-12-09T12:36:13 (inv2Ok,correct,check,)
          SW8aX6d3StDWbruPf, 2020-12-09T12:36:41 (inv1Ok,correct,check,)
            uWMWQgztN6FjgbcJN, 2020-12-09T12:40:26 (The name "s" cannot be found.)
              fkkd8aQGqhc7agwH5, 2020-12-09T12:40:58 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                AFYJeG7eSMQdpJ2k3, 2020-12-09T12:41:33 (inv3Ok,correct,check,)
                  DRL55RDrkdGA8wxBG, 2020-12-09T12:43:34 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
                    jF9GbiDawwM9kPHwp, 2020-12-09T12:44:26 (in can be used only between 2 expressions of the same arity. Left type = {this/Event->this/State} Right type = {this/Event})
                      AdjNq3yX2GWnj2Ngx, 2020-12-09T12:44:56 (inv5Ok,incorrect,check,)
                        GWC4ZT64A58Soo5fM, 2020-12-09T12:45:15 (inv5Ok,incorrect,check,)
                          gm7Ye9XXo4Ekup3BD, 2020-12-09T12:46:08 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                            HDshoHDPGSRW4MZ46, 2020-12-09T12:54:33 (inv5Ok,incorrect,check,)
  ZnswRmM9WHskBDm5e, 2020-12-09T12:44:54 (The name "s" cannot be found.)
    MZ8fivAwCfcTonDNu, 2020-12-09T12:45 (The name "s" cannot be found.)
      PmxeKHgq4AEFjoSdR, 2020-12-09T12:46:14 (There are 3 possible tokens that can appear here: ,  { |)
        oM6xx4Sp2C5dN8HLX, 2020-12-09T12:55:25 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
          nKB7kNW2QjDFGmPGu, 2020-12-09T12:55:37 (The name "s" cannot be found.)
  TCaRegid32yELZeL5, 2020-12-09T12:49:20 (inv5Ok,correct,check,)
    doBp2H4CvYh8PuYb2, 2020-12-09T12:50:36 (inv6Ok,correct,check,)
      8aQt4iaWGxsPyJ9gR, 2020-12-09T12:52:26 (inv7Ok,incorrect,check,)
        xWQvs4bGfG3yLRZZP, 2020-12-09T12:53:10 (There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~)
          4FXuRsD33u25K2uHB, 2020-12-09T12:53:49 (inv7Ok,incorrect,check,)
  3RSSbc7tsXfmNXuqX, 2020-12-11T14:58:35 (inv1Ok,correct,check,)
    zZPFofD9CH5977FZv, 2020-12-11T15:12:19 (inv2Ok,correct,check,)
      H2CLyvfi5CZxGuSR8, 2020-12-11T15:17:20 (inv2Ok,correct,check,The join operation here always yields an empty set. Left type = {this/State->this/Event->this/State} Right type = {this/Event})
        dv9tybgJx6rEdaJPJ, 2020-12-11T15:17:28 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
          rgjJgYRCLsK4Fsfwh, 2020-12-11T15:18:07 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
            7ijuBJDd5M9scWCYC, 2020-12-11T15:18:52 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
              NRh6fxbBzHZ9dafEg, 2020-12-11T15:23:05 (inv3Ok,correct,check,)
                T9a5xkEkgiaZAjDNo, 2020-12-11T15:25:05 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                  LfDSivm8794s7gvF2, 2020-12-11T15:32:22 (inv4Ok,incorrect,check,This variable is unused.)
                    zq8cZexNb97KeQnA6, 2020-12-11T15:32:33 (inv4Ok,correct,check,)
                      EuZDBb9fpmPwx8oLN, 2020-12-11T15:41:06 (inv4Ok,correct,check,)
                        FiEY5Ty47jxk5vcFd, 2020-12-11T15:41:09 (inv5Ok,correct,check,)
                          ihPFyQ6Jnp4wK4BGx, 2020-12-11T15:41:33 (inv5Ok,correct,check,)
                            aEeDv8X8ZrjfmKBac, 2020-12-11T15:42:10 (This cannot be a legal relational join where left hand side is this/State . (this/State <: trans) . e (type = {none}) right hand side is this/State (type = {this/State}))
                              BLPmB5bfEsHRJKtwW, 2020-12-11T15:42:24 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                Cb6nEyJA5nMNr3BPZ, 2020-12-11T15:42:36 (This cannot be a legal relational join where left hand side is s . (this/State <: trans) . e (type = {none}) right hand side is this/State (type = {this/State}))
                                  sGfSCvkacAM4xP3c7, 2020-12-11T15:43:01 (inv5Ok,correct,check,)
                                    8kizpk2Tvo9Mvogkq, 2020-12-11T15:43:04 (inv6Ok,correct,check,)
                                      sDzP9ZHKR4XANrZbH, 2020-12-11T15:43:09 (inv6Ok,correct,check,)
                                        BduGJ6x6TK6NhE3HL, 2020-12-11T15:45:45 (inv6Ok,correct,check,)
                                          nt2yiNF2Web92BEoY, 2020-12-11T15:49:20 (inv6Ok,correct,check,)
                                            63Y3qk7bqcK8jaN4r, 2020-12-11T15:49:23 (inv7Ok,incorrect,check,)
                                              FjMCCXGrS8TooNsNJ, 2020-12-11T15:53:40 (There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~)
                                                DKyfdvw3SLMdrEzwm, 2020-12-11T15:54:01 (inv7Ok,correct,check,)
  Thpjd2t5RKDhAB2Hg, 2020-12-11T14:58:52 (inv1Ok,incorrect,check,This variable is unused.)
    hDkmZxexKe6pt9crJ, 2020-12-11T14:59 (inv1Ok,correct,check,)
      jwBuD5ePydcJ2QBQ4, 2020-12-11T14:59:15 (inv1Ok,incorrect,check,)
        qeotmW2XcgAeSZGWG, 2020-12-11T14:59:23 (inv1Ok,correct,check,)
          MSTqG9pBmYApN9jfE, 2020-12-11T14:59:52 (This must be a set or relation. Instead, it has the following possible type(s): {PrimitiveBoolean})
            B4MM6X79Bg72geCt6, 2020-12-11T15:00:01 (inv2Ok,incorrect,check,)
              n9NgWRpP5CDSzKFTv, 2020-12-11T15:01:42 (inv3Ok,incorrect,check,)
                JYaFHgKcuPbzyenDX, 2020-12-11T15:01:54 (inv3Ok,incorrect,check,)
                  xHbf5gK2jJGZ5GP3f, 2020-12-11T15:02:20 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                    JuAbSFBP6GcWnAw85, 2020-12-11T15:02:26 (inv3Ok,incorrect,check,)
                      QeHavvNWaH2vpTk54, 2020-12-11T15:03:26 (inv2Ok,incorrect,check,)
                        WtFqArKPdkTg2CSAh, 2020-12-11T15:04:09 (This must be a formula expression. Instead, it has the following possible type(s): {this/State})
                          KC9S3Ya7dBF3Qqx3k, 2020-12-11T15:04:16 (inv2Ok,correct,check,)
                            hquLSe5hxS8W7QeT9, 2020-12-11T15:04:21 (inv3Ok,incorrect,check,)
                              qfTW53WkSA9drCKSn, 2020-12-11T15:04:47 (The name "state" cannot be found.)
                                fLZ59ThDeZwD6ys24, 2020-12-11T15:04:58 (inv3Ok,incorrect,check,)
                                  EpfjSNz5nZB8joKAo, 2020-12-11T15:05:27 (inv3Ok,incorrect,check,)
                                    Qa4wxXTDB54YebA32, 2020-12-11T15:07:22 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                      jGzxNCRd3kmfoaxou, 2020-12-11T15:07:41 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                        CAcKeAyucNkvgmfpk, 2020-12-11T15:08:02 (inv3Ok,incorrect,check,)
                                          mM3b5JQWkczRnTetq, 2020-12-11T15:09 (inv3Ok,incorrect,check,)
                                            Kj2d9aHznv9fr6cev, 2020-12-11T15:09:12 (inv3Ok,incorrect,check,)
                                              nXtAfB7vj5z29qz6u, 2020-12-11T15:09:42 (inv1Ok,incorrect,check,)
                                                yMGSAkXkMGdHu3ki4, 2020-12-11T15:09:48 (inv1Ok,correct,check,)
                                                  uAFHyvMhjLDRkbErg, 2020-12-11T15:10:35 (inv3Ok,incorrect,check,)
                                                    q6EiWwswMXi2mFfnH, 2020-12-11T15:12:12 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                                      8nxsgWXWXRPiZ2R7H, 2020-12-11T15:12:19 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                                        3HP3dF5iXNWHFKHY3, 2020-12-11T15:12:28 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/State})
                                                          xYFjvzf7f3LQQ5vWZ, 2020-12-11T15:12:41 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                            NvmaPsw8fK5igqhR7, 2020-12-11T15:13:38 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                              sEp7LFMJsmTHoG9jT, 2020-12-11T15:13:43 (inv3Ok,incorrect,check,)
                                                                tAtFi44RKuTzkbPPW, 2020-12-11T15:14 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                                  6Zwcp488pNBwpzhHo, 2020-12-11T15:14:30 (inv3Ok,incorrect,check,)
                                                                    pwMyx53gsCWXzGgcj, 2020-12-11T15:14:41 (inv3Ok,incorrect,check,)
                                                                      Wf3Zsm67sriKppTzA, 2020-12-11T15:14:51 (inv3Ok,incorrect,check,)
                                                                        oKv5y2MjRN2AkwWZk, 2020-12-11T15:14:59 (inv3Ok,incorrect,check,)
                                                                          CWPnr3qfdrauTqHSA, 2020-12-11T15:15:20 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State->this/State})
                                                                            mKgKGWZ8AbFXAfKpB, 2020-12-11T15:15:29 (inv3Ok,incorrect,check,)
                                                                              9MJyEwdZHdmgPojFw, 2020-12-11T15:17:21 (inv3Ok,correct,check,)
                                                                                8RabnGen3n23cupf3, 2020-12-11T15:17:47 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                                                  yfhiiDgcfDaDpbLX7, 2020-12-11T15:17:52 (inv3Ok,correct,check,)
                                                                                    FtsiP3ZzL25qu4Pda, 2020-12-11T15:19:03 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State})
                                                                                      WKhfBtiBMKyB3mmSD, 2020-12-11T15:19:23 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                        PG9u7LoSt33uxCyeb, 2020-12-11T15:19:45 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                          gskv8qn8S2GgTsbcn, 2020-12-11T15:20:16 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                            GNToqxaShmkC7BK3N, 2020-12-11T15:20:24 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                                                              6LAqryYfCd8aYoBNv, 2020-12-11T15:20:35 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                                                                faMDXqDa8XuA47Tws, 2020-12-11T15:20:42 (inv4Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/State} Right type = {this/Event})
                                                                                                  ve6hcySd9FAMmsEJC, 2020-12-11T15:20:49 (inv4Ok,incorrect,check,)
                                                                                                    7BrWtd3ynF4ccyzDT, 2020-12-11T15:21:17 (inv4Ok,incorrect,check,)
                                                                                                      9nWrqgMKo3m63H4dM, 2020-12-11T15:21:35 (inv4Ok,incorrect,check,)
                                                                                                        DDC35idNcANsnWpWv, 2020-12-11T15:24:31 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is s (type = {this/State}))
                                                                                                          KXxQnYK74GTug8r4B, 2020-12-11T15:24:45 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                                                                            64YGk68AKTLRjiZKF, 2020-12-11T15:28:34 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                                                                                              KQXpx6gNuvHCgvbQd, 2020-12-11T15:28:46 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                                                                                                DZqHSJYAk8hC7F4bk, 2020-12-11T15:28:54 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                                                                                                  p9RaZ94MuZBtyzsjT, 2020-12-11T15:29:10 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                                                                                                    eXzPxfERgcJs6NEn9, 2020-12-11T15:29:22 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                                                                                                      eJbenB6ceqPYwqXQn, 2020-12-11T15:29:25 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                                                                                                        DhyoSmMdfvdt9bMBr, 2020-12-11T15:29:34 (inv3Ok,correct,check,)
                                                                                                                          Gez3ebLzfamZphM3R, 2020-12-11T15:29:43 (inv4Ok,correct,check,)
                                                                                                                            6hMcLzYdxopu7dYyX, 2020-12-11T15:29:51 (inv5Ok,incorrect,check,)
                                                                                                                              49RdQGsrW3EApjRNn, 2020-12-11T15:30:40 (inv5Ok,correct,check,)
                                                                                                                                Cacy9YBBBJixfMBKD, 2020-12-11T15:31:46 (inv6Ok,correct,check,)
                                                                                                                                  fKzqxm4susSYsCcCG, 2020-12-11T15:32:11 (There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~)
                                                                                                                                    wkEprMk3WZvgSWXZA, 2020-12-11T15:32:25 (inv7Ok,incorrect,check,)
                                                                                                                                      c3nuMBgm7JhcHWGcb, 2020-12-11T15:32:47 (inv7Ok,correct,check,)
                                                                                                                                        2ywo7uDrzHZaxbYHb, 2020-12-11T15:34:42 (This cannot be a legal relational join where left hand side is this/Init . ts (type = {this/State}) right hand side is this/State (type = {this/State}))
                                                                                                                                          3o3cj3FEkWjDu3esM, 2020-12-11T15:35 (inv7Ok,correct,check,)
                                                                                                                                            QdgteEDLvtmqbvGaZ, 2020-12-11T15:38:19 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {this/Event})
  iCvjHes2nuGkxCFq8, 2020-12-11T15:01:58 (There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~)
    Y58kquH9ni7ExMm2e, 2020-12-11T15:02:05 (inv1Ok,correct,check,)
      tKwrWdYJAZoR36uHi, 2020-12-11T15:02:10 (inv2Ok,correct,check,)
        Q9W7QJbYMDaEvz986, 2020-12-11T15:04:30 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
          cDd57qRekKNv7JXWr, 2020-12-11T15:04:40 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
            HgcC7WYnH6DJsoEKt, 2020-12-11T15:05:08 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
              W5nCaRYPK4woCxpGj, 2020-12-11T15:05:31 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                J42Pazwm4EqREjiBd, 2020-12-11T15:05:50 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                  qaQ9fo7f9uc5zv47j, 2020-12-11T15:07:51 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                    rfdNfdFF9Mv6bSkeR, 2020-12-11T15:23:15 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                      i2T42KgRsHFKBsBRw, 2020-12-11T15:23:34 (* can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                        ZaxTtrdPaJefpQiZd, 2020-12-11T15:23:39 (inv3Ok,correct,check,)
                          6AGafjaH8caPWq6dK, 2020-12-11T15:26:21 (inv5Ok,incorrect,check,)
                            z7sSCxS3ybNhbyKeL, 2020-12-11T15:27:07 (inv5Ok,incorrect,check,)
                              APAQ4DKiznJRnDea5, 2020-12-11T15:32:51 (inv4Ok,correct,check,)
                                8xneoQwMmCuni3hai, 2020-12-11T15:34:32 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is se . s1 (type = {none}))
                                  AdC7fbc2g2PAD8uzX, 2020-12-11T15:34:40 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is se . s1 (type = {none}))
                                    A5D9MhupqAJhsYTnL, 2020-12-11T15:35 (This cannot be a legal relational join where left hand side is e (type = {this/Event}) right hand side is s1 . se (type = {this/Event}))
                                      objfAbB5HuiEYuc7h, 2020-12-11T15:36:12 (inv5Ok,incorrect,check,)
                                        DG5rs3H8hMX4xuT7s, 2020-12-11T15:40:58 (inv5Ok,correct,check,)
                                          bKjT8swCrZzxMWFbk, 2020-12-11T15:42 (inv6Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                            EehKuAp4MYAD38rBB, 2020-12-11T15:42:55 (inv6Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                              cn3mrRS3SDTHMzTNK, 2020-12-11T15:43 (inv6Ok,correct,check,)
                                                3eE6HLnfAvJkapaud, 2020-12-11T15:43:57 (inv6Ok,correct,check,)
                                                  cGrgJqiFe2m74GnJg, 2020-12-11T15:45 (This must be a formula expression. Instead, it has the following possible type(s): {this/State->this/Event->this/State})
                                                    7epjjd3ZoogY2Fcu4, 2020-12-11T15:45:14 (inv7Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/State->this/Event->Int} Right type = {this/State->this/Event->this/State})
                                                      sGFbDMiGMM6qNaApp, 2020-12-11T15:46:53 (inv7Ok,incorrect,check,)
                                                        aiHeHKyrpP2mobNR8, 2020-12-11T15:47:43 (inv7Ok,incorrect,check,)
                                                          2Tk3bQXFq2bASo86D, 2020-12-11T15:48:08 (inv7Ok,incorrect,check,)
                                                            9Yo97DP3LSZ8RBrzi, 2020-12-11T15:48:42 (The name "s" cannot be found.)
                                                              MYF3vaRgysayGRGnj, 2020-12-11T15:48:52 (inv7Ok,incorrect,check,)
                                                                8ngQicdDZhyiq5yZp, 2020-12-11T15:52:39 (inv7Ok,correct,check,)
  hTmRJ5SQuYCviHwtS, 2020-12-11T15:02:28 (inv1Ok,incorrect,check,)
    jmmj8sFbdYWJJ9tQ3, 2020-12-11T15:03:33 (inv1Ok,incorrect,check,)
      dJJs3iRHRyzj9yktr, 2020-12-11T15:04:01 (inv1Ok,incorrect,check,This variable is unused.)
        DtxGRnfjoq9Qrtr5N, 2020-12-11T15:05:29 (run$1,incorrect,run,)
          2SGxmbPbQkEaGMHuM, 2020-12-11T15:08:54 (run$1,incorrect,run,)
            ScpdpoJfw7ec45sTP, 2020-12-11T15:09:04 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
              qMJu3mhbhFQ48q88F, 2020-12-11T15:10:28 (run$1,incorrect,run,)
                ZXHLGNa3BJ69n4D36, 2020-12-11T15:10:30 (inv1Ok,correct,check,)
                  7eDcMnijwkMLipgzJ, 2020-12-11T15:10:45 (inv2Ok,correct,check,)
  4dW8ykN2fnWd2sorr, 2020-12-11T15:05:19 (inv1Ok,incorrect,check,)
  oDxPiTugkx5SeJCez, 2020-12-11T15:05:22 (inv1Ok,incorrect,check,)
    Lqsbzx8hfBrk3uniG, 2020-12-11T15:05:28 (run$1,incorrect,run,)
      REPmywYp7wZAnWFex, 2020-12-11T15:05:37 (run$1,incorrect,run,)
        tRcbTtv3myHkn6htR, 2020-12-11T15:08:49 (There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~)
          cq9JeEmKwQTWghNkq, 2020-12-11T15:09:43 (inv1Ok,correct,check,)
            gyjnypJnDPTsy4GxN, 2020-12-11T15:10:09 (inv2Ok,correct,check,)
              Chod75HowbLAmYNuH, 2020-12-11T15:12:48 (run$1,incorrect,run,)
                g7oNZ5bQkfw7NLgQg, 2020-12-11T15:15:15 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {none->none})
                  mq3P5h4XWvANPCcEb, 2020-12-11T15:16:37 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/State})
                    AdJcagXJnrdX9QTTM, 2020-12-11T15:16:56 (inv3Ok,correct,check,)
                      imL93N2KoHkWgEbTx, 2020-12-11T15:25:30 (in can be used only between 2 expressions of the same arity. Left type = {this/Event} Right type = {this/Event->this/State})
                        sY4cpmb57CnZzYSkY, 2020-12-11T15:25:50 (inv6Ok,incorrect,check,)
                          GmAZw9RcuBv6EvLav, 2020-12-11T15:32:33 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                            w3pqe3YcyXZw8cHwf, 2020-12-11T15:32:54 (inv4Ok,correct,check,)
                              GgxEL4CDA5RuKpps5, 2020-12-11T15:35:14 (inv5Ok,incorrect,check,)
                                vEjJ9ev4fYyw5EEe8, 2020-12-11T15:37:57 (inv5Ok,incorrect,check,)
                                  bouar8GxZrfvJ3TcD, 2020-12-11T15:38:03 (inv5Ok,incorrect,check,)
                                    qXEsRJS4bnbjLPLmj, 2020-12-11T15:38:12 (inv5Ok,incorrect,check,)
                                      5u7XTuzyTEwi29w7u, 2020-12-11T15:39:18 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                        rYfF33ddb7gWcXmoE, 2020-12-11T15:39:50 (inv5Ok,correct,check,)
                                          Dirgf7CutKXbxu4EP, 2020-12-11T15:40:28 (inv5Ok,correct,check,)
                                            57cbDNzuS3BGpzmLG, 2020-12-11T15:41:17 (inv5Ok,correct,check,)
                                              7PAK35f2wphNZEt8Y, 2020-12-11T15:41:25 (inv5Ok,correct,check,)
                                                qnoMBYLECFzoD9gvj, 2020-12-11T15:41:28 (inv6Ok,correct,check,)
                                                  YyXf4n5pLzQY7Pn8J, 2020-12-11T15:45:08 (inv7Ok,incorrect,check,)
                                                    PN4gHh3CcWTQdsGdD, 2020-12-11T15:45:29 (inv7Ok,incorrect,check,)
                                                      MMnaNDMPD87w93bEe, 2020-12-11T15:45:39 (inv7Ok,incorrect,check,)
                                                        aTjQD4WNSEEhuvKMC, 2020-12-11T15:53:51 (inv7Ok,incorrect,check,)
  CvQSG6QBLyb7Pkren, 2020-12-11T15:06:32 (inv1Ok,incorrect,check,)
    379atskazAaLJpmmQ, 2020-12-11T15:12:09 (inv1Ok,correct,check,)
      7hETs3DxcE9uNaXYk, 2020-12-11T15:23:48 (inv3Ok,correct,check,)
        a9wZGTFYurtHRtQD7, 2020-12-11T15:27:24 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
          ea6jTKHQvPykuFb6R, 2020-12-11T15:36:12 (inv4Ok,correct,check,)
            NGhFtDCt9XftY7AKD, 2020-12-11T15:48:29 (The name "ola" cannot be found.)
              2BmoLMB7P9yFMSQxN, 2020-12-11T15:49:36 (The name "esta" cannot be found.)
  ZgeZMQDahutvRqYsH, 2020-12-11T15:06:34 (inv1Ok,incorrect,check,)
    ZiGdpQimLcuHurcNp, 2020-12-11T15:08:12 (inv1Ok,correct,check,)
      eym3rLwNp8nLQsoSM, 2020-12-11T15:08:40 (inv2Ok,correct,check,)
        LNZbEJKriiiCm4B89, 2020-12-11T15:09:29 (inv3Ok,correct,check,)
          94AD8ZrDXztR7Wwpa, 2020-12-11T15:10:05 (inv3Ok,correct,check,)
            P398suFkDMtpnJgnW, 2020-12-11T15:10:09 (inv3Ok,correct,check,)
              XQgXPWorZgWBTpa2x, 2020-12-11T15:33:20 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                fqtr4SPC4B3vf65ch, 2020-12-11T15:33:28 (There are 3 possible tokens that can appear here: NAME seq this)
                  qqoyZZYN49dMP42Bv, 2020-12-11T15:33:45 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                    JgTHBQN77j79HN2x5, 2020-12-11T15:34:10 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                      ySyzMWYGJepSPP9aA, 2020-12-11T15:36:12 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                        PsYqGCySnx4aYswMR, 2020-12-11T15:38:17 (inv4Ok,correct,check,)
                          eYEBGNyu37WZ4rqgS, 2020-12-11T15:38:33 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                            mAFC58xsbnaE34j5m, 2020-12-11T15:38:42 (inv4Ok,correct,check,)
                              aowwYF9teeBNMWE6q, 2020-12-11T15:39:49 (inv4Ok,correct,check,)
  8aEgrTFzS5W6fqd9A, 2020-12-11T15:06:36 (inv1Ok,incorrect,check,)
    K4nojH4n8HuMT6rHu, 2020-12-11T15:07:49 (inv1Ok,incorrect,check,)
      TE6NLvKsGciDQAMTY, 2020-12-11T15:09:14 (!= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/Event->this/State} Right type = {PrimitiveBoolean})
        dvfzEELB7ScYsH6z4, 2020-12-11T15:09:20 (inv1Ok,incorrect,check,)
          Lr5fxbr4QnB3TeMcP, 2020-12-11T15:12:38 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
            bcm9uRbXuSZqctHG5, 2020-12-11T15:15:25 (inv2Ok,correct,check,)
              GdyKFeZeCYcroberc, 2020-12-11T15:16:35 (inv3Ok,incorrect,check,)
                f29ecCvXfXMp5bZMq, 2020-12-11T15:22:58 (inv3Ok,correct,check,)
                  Ef53MyptJ7fMiQTTx, 2020-12-11T15:25:13 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                    xriWs7W5XkTHFXAHA, 2020-12-11T15:34:11 (This expression failed to be typechecked line 39, column 7, filename=/tmp/alloy_heredoc2336358878914618795.als)
                      W3qhvW9nndoS2o7CB, 2020-12-11T15:34:23 (inv4Ok,correct,check,)
                        rkSwxLE4nTKd2MR4M, 2020-12-11T15:43:33 (inv6Ok,correct,check,)
                          kpncja8rtAPwuvAu4, 2020-12-11T15:44:56 (inv6Ok,correct,check,)
  Eiaw6JzhfL9n3Spx2, 2020-12-11T15:11:19 (inv1Ok,correct,check,)
    w2xebg385J4mn7rs3, 2020-12-11T15:15:30 (inv2Ok,correct,check,)
      9YdBmdmcCcsmFE86q, 2020-12-11T15:17:02 (inv3Ok,incorrect,check,)
        oGLLprZ6X8mETZjBh, 2020-12-11T15:17:16 (inv3Ok,correct,check,)
          tAaMgQFehp97F5wQh, 2020-12-11T15:32:52 (There are 1 possible tokens that can appear here: })
            pfEAvTytsRyWGcsph, 2020-12-11T15:33:30 (There are 1 possible tokens that can appear here: })
              Q45qCtC2Jv7KuZNY3, 2020-12-11T15:37:55 (There are 1 possible tokens that can appear here: })
                mos6JRitHHE6p3CTg, 2020-12-11T15:38:05 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                  F4vT9naBWae7pFrsB, 2020-12-11T15:38:29 (inv5Ok,correct,check,)
                    2GEntLYaGtuy5X9j2, 2020-12-11T15:43:06 (inv6Ok,correct,check,)
                      AQrzfz7PpC6SKb65N, 2020-12-11T15:47:45 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                        cdTDcXYJ6RZnCBJLW, 2020-12-11T15:48:04 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                          dXNnDC2WMegwYm5n4, 2020-12-11T15:48:22 (This expression failed to be typechecked line 60, column 8, filename=/tmp/alloy_heredoc12458905638783207852.als)
                            KjaR8E38DdEEF8gcw, 2020-12-11T15:48:33 (This expression failed to be typechecked line 60, column 8, filename=/tmp/alloy_heredoc9849158567259499461.als)
                              367DkDGzeqy4GSdg2, 2020-12-11T15:49:11 (This expression failed to be typechecked line 60, column 8, filename=/tmp/alloy_heredoc4862095673572615999.als)
                                pB4HtyJf8geJersWf, 2020-12-11T15:49:25 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                  kqdSu4jH855kyizWZ, 2020-12-11T15:50:32 (There are 38 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { } ~)
                                    B9AvQybu5beA9crAK, 2020-12-11T15:53:17 (inv7Ok,correct,check,)
  EwhNXE36R33mdM5W7, 2020-12-11T15:11:43 (inv2Ok,correct,check,)
    KAa8L3sjbjhhsC6QB, 2020-12-11T15:11:46 (inv3Ok,incorrect,check,)
      iexabWdn5xdqbaRvm, 2020-12-11T15:14:03 (inv3Ok,incorrect,check,)
        tEdABcNMkEA7A2ZrY, 2020-12-11T15:18:39 (inv3Ok,incorrect,check,)
          B3S2XWQSRS8CzHq4R, 2020-12-11T15:19:54 (There are 37 possible tokens that can appear here: ! # ( * @ Int NAME NUMBER STRING String Time ^ after all always before disj eventually fun historically iden int let lone no none once one pred seq set some sum this univ { ~)
            XLGgLm7MiQHq2LNNg, 2020-12-11T15:20:01 (inv3Ok,incorrect,check,)
              rF7iqfa8Y3QYmbzxm, 2020-12-11T15:24:34 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
              E2ZEmds3hvDhGMXMa, 2020-12-11T15:24:46 (The "all x" construct is no longer supported. If you know the range of possible values of x, consider rewriting it as "x == set_of_all_possible_values".)
                KPuzFQZFWo5iYEceW, 2020-12-11T15:25:06 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                  aqqrr52KHRGiZgttZ, 2020-12-11T15:27:36 (inv4Ok,incorrect,check,)
                  ZPHZ9aPqfEhjdeGNC, 2020-12-11T15:27:44 (inv3Ok,correct,check,)
                    Yj8YAgombFqrnPruh, 2020-12-11T15:27:50 (inv4Ok,incorrect,check,)
  LrFGr9uuD5ftibHZF, 2020-12-11T15:13:48 (inv2Ok,correct,check,)
    qtCSET3yRbPmonTSS, 2020-12-11T15:41:19 (inv5Ok,correct,check,)
      xk62vnds9YG8EKLq6, 2020-12-11T15:43:15 (inv6Ok,correct,check,)
        kjGxeeyA3XyvTiKYR, 2020-12-11T15:53:37 (model share)
          zhLAG62uTXLJFzytK, 2020-12-11T16:16:07 (model share)
          w28XKgPgtyy2bgi5v, 2020-12-11T17:03:36 (inv1Ok,correct,check,)
          k7LcrLymRRDHaCBPh, 2020-12-11T17:32:10 (inv5Ok,correct,check,)
  rDqJHo62NCRGe7Gbs, 2020-12-11T15:34:29 (There are 1 possible tokens that can appear here: })
    qhqD8TnpRZs4KYyQg, 2020-12-11T15:34:47 (There are 3 possible tokens that can appear here: ,  { |)
      4Tfw8T72ZEhiiZdDG, 2020-12-11T15:35:12 (There are 3 possible tokens that can appear here: ,  { |)
        yn57zXmsy4sja68Yg, 2020-12-11T15:35:37 (inv4Ok,correct,check,)
          APS9jxnDoKcdFo5Yv, 2020-12-11T15:35:55 (inv4Ok,correct,check,)
  Mg6TKXboHXEin36Z2, 2020-12-11T17:05:39 (inv1Ok,correct,check,)
    vmNS9ZoYeBxCaJRhf, 2020-12-11T17:06:30 (inv1Ok,correct,check,)
      TCfrFZo9AjZgHpQSe, 2020-12-11T17:08:02 (inv1Ok,correct,check,)
        LeoRG8MFdNxjzp2CM, 2020-12-11T17:15:10 (inv3Ok,correct,check,)
          4akZCug6dDNJvNhvf, 2020-12-11T17:16:14 (inv3Ok,correct,check,)
            zMxkAtMsk8f96zrzs, 2020-12-11T17:18:44 (The name "e" cannot be found.)
              KpR8XvoKoBxWMo6af, 2020-12-11T17:18:48 (inv3Ok,correct,check,)
                9jYeq3LugWWxpfgFK, 2020-12-11T17:28:21 (in can be used only between 2 expressions of the same arity. Left type = {this/State->this/Event->this/State} Right type = {this/Event})
                  MAALeNGsnAWENrtcE, 2020-12-11T17:28:32 (inv4Ok,incorrect,check,)
                    knWGxFTnBoWnMQFW8, 2020-12-11T17:28:45 (inv4Ok,incorrect,check,)
                      tuGwYSCBqNfJnssuG, 2020-12-11T17:31:34 (inv4Ok,incorrect,check,)
                        hsPXSooek2XgDuet5, 2020-12-11T17:31:48 (inv4Ok,correct,check,)
                          3n8p3nyhABzWMXd3B, 2020-12-11T17:31:55 (inv4Ok,incorrect,check,)
                            CA8MFFei7eDszR8jA, 2020-12-11T17:32:12 (inv4Ok,correct,check,)
                              4YarQLPHoFaEXins9, 2020-12-11T17:33:10 (inv4Ok,correct,check,)
                                kqSM8HijqT4meYPPs, 2020-12-11T17:34:45 (inv4Ok,correct,check,)
                                  NpaLpCMWBA6AdiwrN, 2020-12-11T17:35:19 (inv4Ok,correct,check,)
                                    Gr92aqeeCooS4H2NH, 2020-12-11T17:47:45 (inv5Ok,correct,check,)
  nL7NdKSzvu9EgwpK8, 2020-12-11T17:06:46 (The name "Satet" cannot be found.)
    2Ka9GQmWSskSTEyfK, 2020-12-11T17:07:16 (The name "a1" cannot be found.)
      7Bt8znceRTW5drGQM, 2020-12-11T17:07:25 (The name "a2" cannot be found.)
        CXgWFZQTHmmvi7ma9, 2020-12-11T17:07:31 (inv1Ok,correct,check,)
          NMSSp8BvmvcmQS4M2, 2020-12-11T17:08:11 (inv1Ok,correct,check,)
            zTS5zsJ9GawLDypiJ, 2020-12-11T17:08:38 (inv1Ok,correct,check,)
              725mHJCgpAraLhT68, 2020-12-11T17:09:49 (inv2Ok,correct,check,)
                dLcyZQ6TWB6KtJy9H, 2020-12-11T17:11:45 (This must be a formula expression. Instead, it has the following possible type(s): {this/State})
                  RNGC5AcZ2iorrdYCa, 2020-12-11T17:11:56 (inv3Ok,correct,check,)
                    9oTNBk9JQoMsWNWCL, 2020-12-11T17:12:29 (inv3Ok,correct,check,)
                      JhDKP29bRWygCiSWC, 2020-12-11T17:14:52 (inv2Ok,correct,check,)
                        GTDfLc3MAwgyRyoXm, 2020-12-11T17:15:24 (inv3Ok,correct,check,)
                          QqPMKzpWQzpagMMMH, 2020-12-11T17:15:44 (inv3Ok,correct,check,)
                            sHT6th2rNmRzLRmHB, 2020-12-11T17:16:20 (inv3Ok,correct,check,)
                              DnBMGTaBWGYfSRR4M, 2020-12-11T17:19:04 (inv3Ok,correct,check,)
                                dj6Brashz6eGoqBoY, 2020-12-11T17:19:50 (The name "adj" cannot be found.)
                                  KnGWSjHRgiTRwDpK2, 2020-12-11T17:20 (The name "adj" cannot be found.)
                                    qqCxHxKWHHdc7bMt2, 2020-12-11T17:21:14 (in can be used only between 2 expressions of the same arity. Left type = {this/State->this/State} Right type = {this/State->this/Event->this/State})
                                      npcRM9vKjkvF3Akb6, 2020-12-11T17:28:38 (inv4Ok,incorrect,check,)
                                        Tnwwu7zXtbWk7r5L6, 2020-12-11T17:32:02 (= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {PrimitiveBoolean} Right type = {this/State})
                                          mbdEQytqgdb9GPRP9, 2020-12-11T17:32:15 (inv4Ok,correct,check,)
                                            34Si4chexrQKGKEAx, 2020-12-11T17:33:36 (inv4Ok,correct,check,)
                                              BTgpfi6ZGDCEfegqQ, 2020-12-11T17:35:08 (inv4Ok,correct,check,)
                                                kcwZwcqb8iEqsYu7d, 2020-12-11T17:35:36 (inv4Ok,correct,check,)
                                                  GCfLKxcjnYLaMR5wS, 2020-12-11T17:35:57 (inv4Ok,correct,check,)
                                                    qc58FLN7QqBH6npMp, 2020-12-11T17:37:31 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                                      SMXArThiHjhFLPMY5, 2020-12-11T17:37:48 (inv5Ok,correct,check,)
                                                        n33Df6qvNPfbosA78, 2020-12-11T17:39:49 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                                          ARmJRucNhgP7H5YHJ, 2020-12-11T17:40:08 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                                            3ZZwc5yCYKwcChAJN, 2020-12-11T17:40:44 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                                                              zbTNZwhSieWAsmX2L, 2020-12-11T17:41:11 (inv6Ok,correct,check,)
                                                                nYSq49hAAkAhE9vGQ, 2020-12-11T17:41:30 (inv6Ok,correct,check,)
                                                                  n7qQbSFGiKyrt24Z6, 2020-12-11T17:42:12 (inv7Ok,correct,check,)
  zNDiTJFBgqFTnt38u, 2020-12-11T17:08:22 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/State->this/Event->this/State})
    MmETuDWgbEmMTpiFN, 2020-12-11T17:08:43 (The name "exists" cannot be found.)
      PrCzPhJkJLxKp8Mx2, 2020-12-11T17:09:12 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/State->this/Event})
        kWK25csZNtk3XmMbz, 2020-12-11T17:09:26 (This must be a formula expression. Instead, it has the following possible type(s): {this/Event->this/State})
          PnFbajhRpAhFoftAH, 2020-12-11T17:09:36 (inv1Ok,incorrect,check,)
            ejEjcpzrqPgM7NvNj, 2020-12-11T17:09:48 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
              Ech8pbdDsWCEEabfB, 2020-12-11T17:10:06 (There are 3 possible tokens that can appear here: ,  { |)
                4YXxm9Lvkmwum9ZfJ, 2020-12-11T17:11:03 (inv1Ok,correct,check,)
                  Jp6cSjhDacCN7QKzR, 2020-12-11T17:11:47 (inv1Ok,correct,check,)
                    ijMHPPrid77wr2qAs, 2020-12-11T17:14:42 (inv2Ok,correct,check,)
                      pXzwowp8tZoNBNYfs, 2020-12-11T17:15:38 (inv3Ok,incorrect,check,)
                        Y9kcBPNPGvYpuxiyR, 2020-12-11T17:15:56 (inv3Ok,incorrect,check,)
                          EM9vXayfQfx2zRTjz, 2020-12-11T17:16:56 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                            agXX8T6dAoRE6RYLi, 2020-12-11T17:17:15 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event} Right type = {this/State->this/Event->this/State})
                              6yfiBMv5jDs84oqWm, 2020-12-11T17:17:29 (inv3Ok,incorrect,check,)
                                Y8y2q8qY2b7ZDPvs5, 2020-12-11T17:17:56 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
                                  y3tXuScwc2kgZWckj, 2020-12-11T17:18:17 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
                                    s63JXuYZsirf9nPG5, 2020-12-11T17:18:30 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
                                      CAaL7f4GTQbRXicas, 2020-12-11T17:19:16 (inv3Ok,correct,check,)
                                        hJXddrKnfM4nrYonY, 2020-12-11T17:20:09 (The name "a" cannot be found.)
                                          GbWcFmh7HSnfGnpz2, 2020-12-11T17:20:16 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State})
                                            bAuwqrQjx8q7Z5uaZ, 2020-12-11T17:20:27 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State})
                                              KTCRDKgW3DBgfLEDM, 2020-12-11T17:20:44 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State})
                                                sDGZDo3qq7AsNt99Q, 2020-12-11T17:20:57 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State})
                                                  PaWqicYRMKvnYdEBj, 2020-12-11T17:22:01 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                    vXXMqbEwNH8ijJsNH, 2020-12-11T17:23:34 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                      tfgb6M4phd7hqiZzS, 2020-12-11T17:23:57 (in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
                                                        2ZWu66HBLWHvoDCoz, 2020-12-11T17:25:17 (inv4Ok,correct,check,)
                                                          6zakfqvy62gtyphZk, 2020-12-11T17:28:06 (This cannot be a legal relational join where left hand side is e1 (type = {this/Event}) right hand side is s1 (type = {this/State}))
                                                            nE8YneubCwCJiNMBr, 2020-12-11T17:28:26 (This cannot be a legal relational join where left hand side is s1 (type = {this/State}) right hand side is e1 (type = {this/Event}))
                                                              jssRDwE9DcjsMRXFy, 2020-12-11T17:36:39 (This must be a formula expression. Instead, it has the following possible type(s): {this/State})
                                                                8AxAub9hiTwSArxYA, 2020-12-11T17:36:55 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
                                                                  zRonRGyh96CCW3iSj, 2020-12-11T17:37:13 (inv5Ok,correct,check,)
                                                                    cqf329ne5sBnJwHYs, 2020-12-11T17:38:30 (inv6Ok,incorrect,check,)
                                                                      oGTjxhd4LHSvaBMKW, 2020-12-11T17:38:45 (in can be used only between 2 expressions of the same arity. Left type = {this/Event} Right type = {this/Event->this/State})
                                                                        g6D7A33zvHLsjdX3z, 2020-12-11T17:40:55 (inv6Ok,correct,check,)
                                                                          54a5EkXA5WM4LhpWq, 2020-12-11T17:42:48 (inv7Ok,incorrect,check,)
                                                                            WLBd4Hesponf6w6CY, 2020-12-11T17:44 (inv7Ok,incorrect,check,)
                                                                              gxWKt4M4jetwBfBJ2, 2020-12-11T17:44:23 (inv7Ok,incorrect,check,)
                                                                                tnDfQRsEMPvBfRLCu, 2020-12-11T17:47:59 (inv7Ok,incorrect,check,)
  3ws6W2D7wSJ48b5iv, 2020-12-11T17:08:50 (inv1Ok,correct,check,)
    KqeC5LFwAX83FK544, 2020-12-11T17:09:21 (inv2Ok,incorrect,check,== is redundant, because the left and right expressions are always disjoint. Left type = {this/State} Right type = {Int})
      Y5qqDpRf25NcSQg6w, 2020-12-11T17:09:43 (inv2Ok,correct,check,)
        R2RqiuGSFWs2X7C6v, 2020-12-11T17:10:58 (inv3Ok,incorrect,check,)
          vFMPniwAyRhsX5yj3, 2020-12-11T17:11:12 (inv3Ok,incorrect,check,)
            GWZuNQqX6vcpRFTTj, 2020-12-11T17:14:35 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
              6oJo6LTyv4bEsh8yK, 2020-12-11T17:14:39 (inv2Ok,correct,check,)
                SzHfYumSYHkP7mhCA, 2020-12-11T17:16:20 (inv3Ok,correct,check,)
                  AiizhBtdZQvYqydKq, 2020-12-11T17:16:41 (inv3Ok,correct,check,)
                    97n6CESsNTLbHbBGN, 2020-12-11T17:19:06 (The name "e" cannot be found.)
                      mCMvZaGLbbvapE73y, 2020-12-11T17:19:14 (The name "e" cannot be found.)
                        ezfD4ykJmseQHXMHK, 2020-12-11T17:19:25 (inv3Ok,correct,check,)
                          XXXosRcnRSZhR9cqN, 2020-12-11T17:33 (inv3Ok,correct,check,)
                            FtxFY3uQBuRmgGsdq, 2020-12-11T17:33:02 (inv4Ok,correct,check,)
                              HHnp566NZXdH7jMuw, 2020-12-11T17:35:57 (There are 3 possible tokens that can appear here: ,  { |)
                                6aA3xKiNXvHTsL6NN, 2020-12-11T17:36:11 (inv4Ok,correct,check,)
                                  Z9zPYcMdfcLctfCaG, 2020-12-11T17:36:21 (inv4Ok,correct,check,)
                                    sMicS7osTAgcMgswy, 2020-12-11T17:36:25 (inv4Ok,correct,check,)
                                      DGbfWhz7SWr8K8H2n, 2020-12-11T17:37:57 (inv5Ok,correct,check,)
                                        KY7XmE8YjsDvCaGbR, 2020-12-11T17:38:29 (inv6Ok,correct,check,)
                                          HbFmtiPfvgcuW6do6, 2020-12-11T17:39:06 (inv6Ok,correct,check,)
  oX34BaDeZ8fE32kjv, 2020-12-11T17:10:26 (inv1Ok,correct,check,)
    DWoj4iXWHFARahwN9, 2020-12-11T17:11 (inv2Ok,correct,check,)
      PdaAAhq4tHw4ekBGp, 2020-12-11T17:11:24 (inv2Ok,correct,check,)
        fsp3MPJFfRdrDe6du, 2020-12-11T17:13:10 (inv3Ok,correct,check,)
          ZB8fmY9PFuZH86iSW, 2020-12-11T17:25:25 (inv4Ok,correct,check,)
            HPLZxELLaHak3HHuR, 2020-12-11T17:27:18 (inv4Ok,correct,check,)
              mHMDSct6F4Wty4Dhb, 2020-12-11T17:32:25 (inv5Ok,correct,check,)
                3Gqes9QowoQPGX8zj, 2020-12-11T17:36 (inv5Ok,correct,check,)
                  B4wsY5zzFWmqXtQvh, 2020-12-11T17:41:13 (inv6Ok,correct,check,)
                    BXpfjcKEkijf8LdbS, 2020-12-11T17:41:39 (inv6Ok,correct,check,)
                      Fx3suShGtHTdKu5H5, 2020-12-11T17:43:27 (inv7Ok,correct,check,)
  FTuxQ2Rynmydab3qi, 2020-12-11T17:11:20 (The name "state" cannot be found.)
    a5nWqvC33dWSuvhZL, 2020-12-11T17:11:53 (inv1Ok,incorrect,check,)
      tR6ZwdJuCjRMQ6RuC, 2020-12-11T17:13:31 (inv1Ok,incorrect,check,)
        a2ZmjRkK6LnLBf2nF, 2020-12-11T17:13:59 (There are 28 possible tokens that can appear here: ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
          yW4YN6NdA952Jd5iT, 2020-12-11T17:14:07 (inv1Ok,correct,check,)
            NbCijx4SkexSCZ7hs, 2020-12-11T17:14:40 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
              43sg3zrznsCQxFtej, 2020-12-11T17:14:45 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                4KYxxJKeKxr4DenSD, 2020-12-11T17:14:57 (inv2Ok,correct,check,)
                  ryWEmF8CWWpdgtF7j, 2020-12-11T17:15:06 (inv2Ok,correct,check,)
                    tWzp5gmxgyCXSkJoD, 2020-12-11T17:16:54 (inv3Ok,incorrect,check,)
                      beczBmst3SakC5Wvc, 2020-12-11T17:19:30 (inv3Ok,correct,check,)
                        LCGvMyajzBNa7qcGp, 2020-12-11T17:29:15 (inv4Ok,correct,check,)
                          J3tseBDMmZXf8ByGv, 2020-12-11T17:41:09 (inv5Ok,correct,check,)
                            6oGDdHYah3YyzfkGk, 2020-12-11T17:41:28 (inv6Ok,correct,check,)
                              RgDkyfBQdosetk4ek, 2020-12-11T17:42:17 (inv6Ok,correct,check,)
                                39eEZBkmXZQcvQKHv, 2020-12-11T17:51:08 (inv7Ok,correct,check,)
  4NRGGYRc5GQ4RyggQ, 2020-12-11T17:11:35 (inv1Ok,incorrect,check,This variable is unused.)
    6bxjCWSJhAjn8YYCq, 2020-12-11T17:12:33 (!= can be used only between 2 expressions of the same arity, or between 2 integer expressions. Left type = {this/State->this/Event} Right type = {this/State})
      HLvfE8xa4Fzwxyace, 2020-12-11T17:13:13 (inv1Ok,correct,check,)
        8uLDm9oGk2TXdomGw, 2020-12-11T17:14:05 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/State->this/Event->this/State})
          N4FWhRqiMqvvqaDEh, 2020-12-11T17:14:48 (!in can be used only between 2 expressions of the same arity. Left type = {this/State} Right type = {this/Event->this/State})
            aq6j4Zh8MnNEya2Gy, 2020-12-11T17:15:04 (inv2Ok,correct,check,)
              Zhm8nFjDFZXtfjxt7, 2020-12-11T17:15:45 (inv2Ok,correct,check,)
                a3pLQjMfcAGxv5sA3, 2020-12-11T17:15:49 (inv3Ok,incorrect,check,)
                  Qx9NmbXQQccPNzN26, 2020-12-11T17:16:13 (inv3Ok,incorrect,check,)
                    PzgwzuStnKZH6pWBr, 2020-12-11T17:17:21 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                      abKR7hcaaBZZKxvvx, 2020-12-11T17:18:06 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
                        AKK5tdKPLqmuQdWcS, 2020-12-11T17:19:15 (inv3Ok,correct,check,)
                          YPD45cmgvxrxiZYTq, 2020-12-11T17:32:21 (inv5Ok,incorrect,check,)
                            jsxZrkBLmZHcoH2Ky, 2020-12-11T17:33:11 (There are 29 possible tokens that can appear here: # ( * @ Int NAME NUMBER STRING String Time ^ all disj fun iden int let lone no none one pred seq some sum this univ { ~)
                              evbi3MAukeP67jhqj, 2020-12-11T17:33:16 (inv5Ok,incorrect,check,)
                                TsAJgZpnXAay2GWzD, 2020-12-11T17:34:52 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                  HnCH2CwptxyzyRcKu, 2020-12-11T17:35:16 (The name "dom" cannot be found.)
                                    ZgHFeBZJhwxmotLKf, 2020-12-11T17:35:29 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                      nh5Z8GhY4RtrkxcSA, 2020-12-11T17:35:59 (inv5Ok,correct,check,)
                                        eCAt9rnGiX48iYn4i, 2020-12-11T17:37:02 (inv6Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event->this/State} Right type = {this/Event})
                                          6pYoezdrYcoJhD9Ei, 2020-12-11T17:37:11 (inv6Ok,incorrect,check,Subset operator is redundant, because the left and right subexpressions are always disjoint. Left type = {this/Event} Right type = {this/State})
                                            sTjcZaCYEk6MQYmaK, 2020-12-11T17:38:36 (inv6Ok,correct,check,)
                                              HYbQbbg52sqrznJvM, 2020-12-11T17:40 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                spH6rpYKhb6vMcyTr, 2020-12-11T17:41:56 (inv7Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/Event} Right type = {this/State->this/Event->this/State})
                                                  GbHfDBjCpDwer24GP, 2020-12-11T17:42:13 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                    cL2N7rHvZzuHCCsiG, 2020-12-11T17:44:15 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                      wNCPEdYvkvSyLEr5s, 2020-12-11T17:44:30 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                        6BNQ6rqDa869DLeyp, 2020-12-11T17:44:55 (^ can be used only with a binary relation. Instead, its possible type(s) are: {this/State->this/Event->this/State})
                                                          kkWu3tANttZTRR3pd, 2020-12-11T17:46:06 (The name "init" cannot be found.)
                                                            k4ywRh5hdLcoT7JnL, 2020-12-11T17:46:55 (inv7Ok,incorrect,check,)
                                                              QHgskHq65qW6HKvMy, 2020-12-11T17:47:03 (inv4Ok,incorrect,check,)
                                                                BEXNWi2nkeJMwcRrC, 2020-12-11T17:47:08 (inv4Ok,correct,check,)
                                                                  oXu7esMSYDz29CksJ, 2020-12-11T17:47:16 (inv7Ok,incorrect,check,)
                                                                    nD9THor4KEHbhgK46, 2020-12-11T17:47:48 (inv7Ok,incorrect,check,)
                                                                      yJWwPF3wEEzezQL7X, 2020-12-11T17:47:55 (inv7Ok,incorrect,check,)
                                                                        L67P9XnBu3XZ8yGXg, 2020-12-11T17:48:12 (inv7Ok,incorrect,check,)
                                                                          dXETCWkoipC6cB4zH, 2020-12-11T17:48:27 (inv7Ok,incorrect,check,)
                                                                            zRySSMeYaxY2Xd8kN, 2020-12-11T17:48:44 (inv7Ok,correct,check,)
                                                                              FMEW9aWHuCr4vuFSC, 2020-12-11T17:48:50 (inv7Ok,incorrect,check,)
                                                                                vxfov5dBKrooESYsP, 2020-12-11T17:48:58 (inv7Ok,incorrect,check,)
  QbPmTrnX7jMgk5WJa, 2020-12-11T17:14:40 (inv2Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
    2yRnxArkXX3z5SbEQ, 2020-12-11T17:17:01 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
      3qZNyHyZreN3uW7p2, 2020-12-11T17:17:57 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
        nDeaLjn4ad4fi68kv, 2020-12-11T17:18:11 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
          xHfZyBYtZfXxZbsRp, 2020-12-11T17:18:26 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
            nrjC2cN6Ye2LLWXSr, 2020-12-11T17:18:35 (inv3Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
              R4QXqvYxtonHnKhzv, 2020-12-11T17:31:21 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
                Bm8x7ApygBksd57w8, 2020-12-11T17:32:11 (inv5Ok,incorrect,check,The join operation here always yields an empty set. Left type = {this/State} Right type = {this/Event->this/State})
  BdYExjRxrvJtNpuSf, 2020-12-11T17:15:05 (inv1Ok,correct,check,)
    buBKhCZ3jAZFQC2vp, 2020-12-11T17:15:23 (inv1Ok,correct,check,)
      zyW66HrMBWqkFoiKc, 2020-12-11T17:16:25 (inv3Ok,incorrect,check,)
        uLimuPFBsyAYCKqrw, 2020-12-11T17:17:58 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
          g4vs9AYhhFLgdEipJ, 2020-12-11T17:18:12 (Analysis cannot be performed since it requires higher-order quantification that could not be skolemized.)
            HS9MtmZN9au4zQKEi, 2020-12-11T17:18:56 (inv3Ok,correct,check,)
              GDMZaQDxCFPZiyS6x, 2020-12-11T17:27:09 (inv4Ok,correct,check,)
                pMhdgE3qWKc7n9MRM, 2020-12-11T17:40:55 (inv6Ok,correct,check,)
                  JsovRa4cvzKWAER8C, 2020-12-11T17:51:39 (model share)
  xtbPXon7pMLShNfwr, 2020-12-11T17:15:10 (inv1Ok,correct,check,)
    YHQgpAvmhAWzQGqdf, 2020-12-11T17:20:41 (inv1Ok,correct,check,)
      H2DsMCD3za26Ljm2t, 2020-12-11T17:23:23 (inv3Ok,correct,check,)
        nfL9AXBPaKAaa3Bf3, 2020-12-11T17:36:20 (inv5Ok,correct,check,)
          SGSenDs7AqeumLj9v, 2020-12-11T17:39:19 (This must be a formula expression. Instead, it has the following possible type(s): {none->none})
            yogdHZcMXC77RWSeE, 2020-12-11T17:39:33 (This must be a formula expression. Instead, it has the following possible type(s): {none})
              5m9kXQsig3AMKbskP, 2020-12-11T17:40:35 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                BN5uLNgnTFwmetHHD, 2020-12-11T17:40:47 (There are 8 possible tokens that can appear here: NAME disj exh part private seq this var)
                  BKXmPrZtkrWjrALkG, 2020-12-11T17:41:26 (inv6Ok,correct,check,)
                    ZCjZv3udTLALfS4Z2, 2020-12-11T17:41:49 (inv6Ok,correct,check,)
                      BNsy9FCkA5DLcTFGW, 2020-12-11T17:49:41 (inv6Ok,correct,check,)
                        nv6H8XEjDzMTxYz9z, 2020-12-11T17:49:44 (inv7Ok,correct,check,)
